using Microsoft.EntityFrameworkCore;
using UserAPI.Model;

namespace UserAPI.Data
{
    public class UserDbContext : DbContext
    {
        public UserDbContext(DbContextOptions<UserDbContext> options) : base(options)
        {
        }

        public DbSet<User> Users { get; set; } = null!;
        public DbSet<RefreshToken> RefreshTokens { get; set; } = null!;


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<User>().HasData(
                new User
                {
                    UserId = 1,
                    FullName = "Admin User",
                    Email = "admin@example.com",
                    PasswordHash = new byte[]
                    {
                        0x3D, 0xF5, 0x5F, 0xEF, 0x72, 0x33, 0x75, 0xE3, 0xB7, 0x58, 0xC2, 0xAA, 0x6A, 0x90, 0x36, 0x0D,
                        0x21, 0x47, 0x76, 0xBD, 0xB8, 0xE1, 0x0C, 0x41, 0x83, 0xFD, 0xC9, 0xFF, 0x97, 0xE5, 0x8E, 0xF5,
                        0x5E, 0xFE, 0x9D, 0x0C, 0x6F, 0x07, 0xC5, 0xCD, 0x5C, 0x79, 0xBF, 0xB0, 0xEE, 0xD2, 0x5A, 0x15,
                        0x4A, 0xE5, 0x30, 0xBA, 0x0C, 0x73, 0xF8, 0x46, 0xCA, 0x4B, 0x34, 0x86, 0xED, 0x85, 0x46, 0x5A
                    },
                    PasswordSalt = new byte[]
                    {
                        0x8D, 0x40, 0x04, 0x86, 0xD7, 0x64, 0x65, 0xE5, 0xD9, 0x42, 0x8D, 0xCB, 0xE9, 0xC7, 0x23, 0x33,
                        0x2E, 0xF8, 0x36, 0xB3, 0xD6, 0x1C, 0x2F, 0x7A, 0x89, 0x11, 0x3A, 0x0B, 0x4E, 0x6F, 0x67, 0x60,
                        0x6A, 0x55, 0x7D, 0xD7, 0xDE, 0x4C, 0x05, 0x09, 0x07, 0xE7, 0x15, 0xA3, 0xF0, 0x9B, 0xE6, 0x56,
                        0x02, 0x5E, 0xF7, 0x9E, 0x76, 0xDC, 0xB3, 0xE9, 0x05, 0x1F, 0x03, 0xDA, 0xBD, 0x35, 0xB9, 0x07,
                        0xBF, 0xC8, 0x74, 0xAC, 0x17, 0x34, 0x70, 0xBC, 0x23, 0xD5, 0xAE, 0x62, 0xE0, 0x60, 0x72, 0xF4,
                        0x51, 0x53, 0x59, 0x1E, 0x28, 0xF8, 0x23, 0x00, 0x97, 0xB7, 0xD7, 0x10, 0x0A, 0x26, 0x87, 0x0B,
                        0x80, 0xE8, 0x38, 0xCB, 0x9C, 0x77, 0x00, 0x60, 0x37, 0x0C, 0xF3, 0xA5, 0x0F, 0xD5, 0x2B, 0x9E,
                        0x67, 0x73, 0x96, 0xC1, 0x41, 0x20, 0x01, 0x7A, 0x1B, 0xB6, 0x49, 0x21, 0x7F, 0x84, 0xF5, 0xF0
                    },
                    Role = "Admin",
                    Address = "123 Admin St",
                    PhoneNumber = "0123456789",
                    AvatarUrl = "https://example.com/avatar/admin.png",
                    FaceEmbeddingsJson = null,
                    FrontCCCDUrl = "https://example.com/cccd/admin.png",
                    RearCCCDUrl = "https://example.com/cccd/admin_rear.png",
                    IsActive = true,
                    CreatedDate = new DateTime(2024, 06, 01, 0, 0, 0, DateTimeKind.Utc),
                    UpdatedDate = new DateTime(2024, 06, 01, 0, 0, 0, DateTimeKind.Utc),
                    GoogleId = null,
                    Provider = null
                }
            );

            // Thiết lập quan hệ 1-nhiều giữa User và RefreshToken
            modelBuilder.Entity<RefreshToken>()
                .HasOne(rt => rt.User)
                .WithMany(u => u.RefreshTokens)
                .HasForeignKey(rt => rt.UserId);
        }


        private void CreatePasswordHash(string password, out byte[] passwordHash, out byte[] passwordSalt)
        {
            using (var hmac = new System.Security.Cryptography.HMACSHA512())
            {
                passwordSalt = hmac.Key;
                passwordHash = hmac.ComputeHash(System.Text.Encoding.UTF8.GetBytes(password));
            }
        }

    }
}
