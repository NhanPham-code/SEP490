@using CustomerUI.Models
@{
    ViewData["Title"] = "Tải Lên Ảnh & 5 Góc Khuôn Mặt";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>@ViewData["Title"] - Sportivey</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css" rel="stylesheet" />
    <link href="~/css/common/upload.css" rel="stylesheet" />
</head>

<body class="min-h-screen flex items-center justify-center p-4">
    <div class="toast-container" id="toast-container"></div>
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="toast error" id="server-error">
            <i class="ri-error-warning-line"></i>
            <div>@ViewBag.ErrorMessage</div>
        </div>
    }

    <a href="@Url.Action("Index", "Home")" class="back-to-home-btn">
        <i class="ri-home-line"></i>
        <span>Trang chủ</span>
    </a>

    <div class="main-container rounded-3xl shadow-2xl w-full max-w-2xl p-8 relative overflow-hidden">
        <div class="text-center mb-8 relative z-10">
            <div class="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-blue-500 to-green-500 rounded-full mb-4">
                <i class="ri-camera-fill text-3xl text-white"></i>
            </div>
            <h1 class="text-3xl font-bold bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent mb-2">
                Hoàn tất đăng ký
            </h1>
            <p class="text-gray-600">
                Tải avatar và thực hiện các bước hướng dẫn để hoàn tất quá trình đăng ký tài khoản.
            </p>
        </div>

        <form id="completeRegForm" enctype="multipart/form-data" class="space-y-6 relative z-10">
            <!-- Avatar Section -->
            <div class="bg-gray-50 rounded-xl p-6">
                <label class="block text-lg font-semibold text-gray-800 mb-4">
                    <i class="ri-user-line mr-2"></i>
                    Ảnh đại diện
                </label>
                <div class="flex items-center gap-6">
                    <div>
                        <img id="avatarPreview" class="w-20 h-20 rounded-full object-cover border-3 border-teal-500"
                             src="https://ui-avatars.com/api/?name=Avatar&background=0891b2&color=ffffff&size=128"
                             alt="Avatar Preview">
                    </div>
                    <div class="flex flex-col gap-3">
                        <input id="avatar" name="avatar" type="file" accept="image/*" class="hidden">
                        <label for="avatar" class="sport-btn sport-btn-secondary cursor-pointer">
                            <i class="ri-image-add-line"></i>
                            Chọn ảnh
                        </label>
                        <button type="button" id="removeAvatar" class="sport-btn sport-btn-secondary">
                            <i class="ri-delete-bin-line"></i>
                            Xóa ảnh
                        </button>
                    </div>
                </div>
            </div>

            <div class="space-y-6">
                <!-- Warning Notice -->
                <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                    <div class="flex items-start">
                        <i class="ri-warning-line text-yellow-600 mt-1 mr-3"></i>
                        <div class="text-yellow-800">
                            <h4 class="font-semibold mb-2">Lưu ý quan trọng:</h4>
                            <ul class="text-sm space-y-1">
                                <li>• Giữ khuôn mặt trong khung hình suốt quá trình thực hiện</li>
                                <li>• Quay mặt theo đúng hướng từng bước hướng dẫn</li>
                                <li>• Nếu vi phạm quá 3 lần, hệ thống sẽ yêu cầu chụp lại từ đầu</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Steps List -->
                <div class="bg-gray-50 rounded-xl p-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">
                        <i class="ri-list-check mr-2"></i>
                        Hướng dẫn thực hiện
                    </h3>
                    <ol id="stepsList" class="list-none space-y-2">
                        <li class="step-item step-pending" data-step="0">
                            <div class="w-8 h-8 rounded-full bg-teal-100 text-teal-600 flex items-center justify-center font-semibold">1</div>
                            <div>👁️ Nhìn thẳng vào camera</div>
                        </li>
                        <li class="step-item step-pending" data-step="1">
                            <div class="w-8 h-8 rounded-full bg-teal-100 text-teal-600 flex items-center justify-center font-semibold">2</div>
                            <div>⬅️ Quay mặt sang trái</div>
                        </li>
                        <li class="step-item step-pending" data-step="2">
                            <div class="w-8 h-8 rounded-full bg-teal-100 text-teal-600 flex items-center justify-center font-semibold">3</div>
                            <div>➡️ Quay mặt sang phải</div>
                        </li>
                        <li class="step-item step-pending" data-step="3">
                            <div class="w-8 h-8 rounded-full bg-teal-100 text-teal-600 flex items-center justify-center font-semibold">4</div>
                            <div>⬆️ Ngẩng cao đầu</div>
                        </li>
                        <li class="step-item step-pending" data-step="4">
                            <div class="w-8 h-8 rounded-full bg-teal-100 text-teal-600 flex items-center justify-center font-semibold">5</div>
                            <div>⬇️ Cúi đầu xuống</div>
                        </li>
                    </ol>
                </div>

                <!-- Live Camera + Face Detection UI -->
                <div class="video-container">
                    <video id="preview" class="w-full h-auto block" autoplay muted playsinline></video>
                    <canvas id="faceCanvas" class="face-detection-canvas"></canvas>
                    <div id="directionGuide" class="direction-guide" style="display: none;">
                        <div id="directionText">Nhìn thẳng vào camera</div>
                    </div>
                    <div id="faceStatus" class="face-status loading">
                        <i class="ri-loader-line"></i>
                        <span>Đang khởi động...</span>
                        <div class="loading-spinner"></div>
                    </div>
                    <div id="violationCounter" class="violation-counter" style="display: none;">
                        <i class="ri-error-warning-line mr-1"></i>
                        Vi phạm: <span id="violationCount">0</span>/3
                    </div>
                    <div id="overlay" class="video-overlay opacity-0">
                        <div id="overlayText" class="text-xl font-semibold mb-4 text-center">Chuẩn bị...</div>
                        <div id="countdown" class="countdown-text">3</div>
                    </div>
                </div>

                <!-- Progress -->
                <div>
                    <div class="flex justify-between items-center mb-2">
                        <span class="text-sm font-medium text-gray-700">Tiến độ</span>
                        <span class="text-sm text-gray-500" id="progressPercent">0%</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div id="progressBar" class="bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                </div>

                <!-- Status -->
                <div class="text-center">
                    <div id="statusIndicator" class="status-indicator status-ready">
                        <i class="ri-camera-line"></i>
                        <span id="statusText">Sẵn sàng</span>
                    </div>
                </div>

                <!-- Controls -->
                <div class="flex flex-wrap gap-3 justify-center">
                    <button type="button" id="startBtn" class="sport-btn sport-btn-primary" disabled>
                        <i class="ri-play-circle-line"></i>
                        Bắt đầu chụp
                    </button>
                    <button type="button" id="resetBtn" class="sport-btn sport-btn-warning" disabled>
                        <i class="ri-refresh-line"></i>
                        Chụp lại từ đầu
                    </button>
                    <button type="button" id="stopBtn" class="sport-btn sport-btn-danger" disabled>
                        <i class="ri-stop-circle-line"></i>
                        Dừng
                    </button>
                </div>

                <!-- Preview 5 Face Images Section -->
                <div id="faceImagePreviewZone" class="flex gap-2 mt-4 justify-center"></div>
            </div>

            <button type="button" id="submitBtn" class="w-full sport-btn sport-btn-primary text-lg py-4" disabled>
                <i class="ri-check-double-line mr-2"></i>
                Hoàn tất đăng ký
            </button>
        </form>
    </div>

    <!-- TensorFlow.js -->
    <script defer src="https://cdn.jsdelivr.net/npm/@@tensorflow/tfjs@1.7.4/dist/tf.min.js"></script>
    <!-- Face-api.js -->
    <script defer src="~/js/ai/face-api.min.js"></script>
    <!-- Main logic JS -->
    <script defer src="~/js/ai/face.js"></script>

    <script>
        // Toast notification system (giữ nguyên như cũ)
        function showToast(message, type = 'success', autoHide = true) {
            const container = document.getElementById('toast-container');
            const toastId = 'toast-' + Date.now();
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.id = toastId;
            const iconMap = {
                'success': 'ri-check-circle-line',
                'error': 'ri-error-warning-line',
                'warning': 'ri-alert-line'
            };
            toast.innerHTML = `<i class="${iconMap[type] || 'ri-information-line'}"></i>
                        <div>${message}</div>`;
            container.appendChild(toast);
            if (autoHide) {
                setTimeout(() => {
                    toast.style.animation = 'slideOutAlert 0.3s ease-out forwards';
                    setTimeout(() => toast.remove(), 300);
                }, 5000);
            }
            return toastId;
        }
        document.addEventListener('DOMContentLoaded', function () {
            const serverError = document.getElementById('server-error');
            if (serverError) {
                setTimeout(() => {
                    serverError.style.animation = 'slideOutAlert 0.3s ease-out forwards';
                    setTimeout(() => serverError.remove(), 300);
                }, 5000);
            }
        });
        window.addEventListener('orientationchange', function () {
            setTimeout(() => {
                const video = document.getElementById('preview');
                if (video && video.srcObject) {
                    const stream = video.srcObject;
                    video.srcObject = null;
                    setTimeout(() => {
                        video.srcObject = stream;
                    }, 100);
                }
            }, 500);
        });
    </script>
</body>
</html>