@model DTOs.UserDTO.ReadUserDTO

@{
    ViewData["Title"] = "User Profile";
}

<style>
    /* Enhanced Tailwind config with modern design tokens */
    tailwind.config = {
        theme: {
            extend: {
                colors: {
                    primary: "#3b82f6",
                    secondary: "#10b981",
                    accent: "#8b5cf6",
                    dark: "#1f2937"
                },
                borderRadius: {
                    none: "0px",
                    sm: "4px",
                    DEFAULT: "8px",
                    md: "12px",
                    lg: "16px",
                    xl: "20px",
                    "2xl": "24px",
                    "3xl": "32px",
                    full: "9999px",
                    button: "12px",
                },
                animation: {
                    'fade-in': 'fadeIn 0.5s ease-in-out',
                    'slide-up': 'slideUp 0.6s ease-out',
                    'float': 'float 3s ease-in-out infinite',
                }
            }
        }
    };

    /* Custom animations */
    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @@keyframes slideUp {
        from { transform: translateY(30px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }

    @@keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }

    /* Modern gradient backgrounds */
    .gradient-primary {
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    }

    .gradient-secondary {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    }

    .gradient-accent {
        background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
    }

    .glass-effect {
        backdrop-filter: blur(16px) saturate(180%);
        background-color: rgba(255, 255, 255, 0.85);
        border: 1px solid rgba(255, 255, 255, 0.125);
    }

    .profile-card {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        box-shadow: 
            0 20px 25px -5px rgba(0, 0, 0, 0.1),
            0 10px 10px -5px rgba(0, 0, 0, 0.04),
            0 0 0 1px rgba(255, 255, 255, 0.05);
    }

    .info-card {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: 1px solid rgba(0, 0, 0, 0.05);
    }

    .info-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);
    }

    .avatar-glow {
        box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1), 0 0 20px rgba(59, 130, 246, 0.3);
    }

    /* Mobile-first responsive design */
    @@media (max-width: 768px) {
        .mobile-center {
            text-align: center;
        }
        
        .mobile-full {
            width: 100%;
        }
    }
</style>

@if (TempData["ErrorMessage"] != null)
{
    <div class="fixed top-4 right-4 z-50 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg animate-fade-in">
        <i class="ri-error-warning-line mr-2"></i>
        @TempData["ErrorMessage"]
    </div>
}

<!-- Background with subtle pattern -->
<div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-emerald-50 relative overflow-hidden">
    <!-- Decorative background elements -->
    <div class="absolute top-0 left-0 w-72 h-72 bg-blue-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-float"></div>
    <div class="absolute top-0 right-0 w-72 h-72 bg-emerald-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-float" style="animation-delay: 2s;"></div>
    <div class="absolute -bottom-8 left-20 w-72 h-72 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-float" style="animation-delay: 4s;"></div>

    <div class="relative z-10 flex items-center justify-center min-h-screen p-4 py-8">
        <div class="profile-card w-full max-w-5xl rounded-3xl p-6 md:p-10 animate-slide-up">
            <!-- Header Section -->
            <div class="flex flex-col lg:flex-row items-center lg:items-start gap-8 lg:gap-12">
                <!-- Avatar Section -->
                <div class="flex-shrink-0 relative group">
                    <div class="w-40 h-40 md:w-48 md:h-48 lg:w-56 lg:h-56 relative">
                        @if (!string.IsNullOrEmpty(Model.AvatarUrl))
                        {
                            <img src="@Model.AvatarUrl" alt="User Avatar" 
                                 class="rounded-full w-full h-full object-cover border-4 border-white shadow-2xl avatar-glow group-hover:scale-105 transition-transform duration-300">
                        }
                        else
                        {
                            <div class="rounded-full w-full h-full gradient-secondary flex items-center justify-center text-white text-5xl md:text-6xl font-bold border-4 border-white shadow-2xl avatar-glow group-hover:scale-105 transition-transform duration-300">
                                @Model.FullName.FirstOrDefault()
                            </div>
                        }
                        <!-- Status indicator -->
                        <div class="absolute bottom-2 right-2 w-8 h-8 @(Model.IsActive ? "bg-green-500" : "bg-red-500") rounded-full border-4 border-white shadow-lg flex items-center justify-center">
                            <i class="@(Model.IsActive ? "ri-check-line" : "ri-close-line") text-white text-sm"></i>
                        </div>
                    </div>
                </div>

                <!-- Profile Info Section -->
                <div class="flex-1 w-full mobile-center lg:text-left">
                    <div class="mb-6">
                        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent mb-2">
                            @Model.FullName
                        </h1>
                        <p class="text-lg md:text-xl text-gray-600 font-medium">@Model.Role</p>
                    </div>

                    <!-- Info Cards Grid -->
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
                        <!-- Email Card -->
                        <div class="info-card bg-white rounded-2xl p-4 lg:p-6 shadow-sm">
                            <div class="flex items-center gap-4">
                                <div class="w-12 h-12 gradient-primary rounded-xl flex items-center justify-center flex-shrink-0">
                                    <i class="ri-mail-line text-white text-xl"></i>
                                </div>
                                <div class="min-w-0 flex-1">
                                    <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">Email</p>
                                    <p class="text-base lg:text-lg font-semibold text-gray-900 truncate">@Model.Email</p>
                                </div>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                        {
                            <!-- Phone Card -->
                            <div class="info-card bg-white rounded-2xl p-4 lg:p-6 shadow-sm">
                                <div class="flex items-center gap-4">
                                    <div class="w-12 h-12 gradient-secondary rounded-xl flex items-center justify-center flex-shrink-0">
                                        <i class="ri-phone-line text-white text-xl"></i>
                                    </div>
                                    <div class="min-w-0 flex-1">
                                        <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">Phone</p>
                                        <p class="text-base lg:text-lg font-semibold text-gray-900 truncate">@Model.PhoneNumber</p>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(Model.Address))
                        {
                            <!-- Address Card -->
                            <div class="info-card bg-white rounded-2xl p-4 lg:p-6 shadow-sm sm:col-span-2">
                                <div class="flex items-center gap-4">
                                    <div class="w-12 h-12 gradient-accent rounded-xl flex items-center justify-center flex-shrink-0">
                                        <i class="ri-map-pin-line text-white text-xl"></i>
                                    </div>
                                    <div class="min-w-0 flex-1">
                                        <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">Address</p>
                                        <p class="text-base lg:text-lg font-semibold text-gray-900">@Model.Address</p>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Status Card -->
                        <div class="info-card bg-white rounded-2xl p-4 lg:p-6 shadow-sm @(string.IsNullOrEmpty(Model.Address) ? "sm:col-span-2" : "")">
                            <div class="flex items-center gap-4">
                                <div class="w-12 h-12 @(Model.IsActive ? "bg-green-500" : "bg-red-500") rounded-xl flex items-center justify-center flex-shrink-0">
                                    <i class="@(Model.IsActive ? "ri-check-line" : "ri-close-line") text-white text-xl"></i>
                                </div>
                                <div class="min-w-0 flex-1">
                                    <p class="text-sm font-medium text-gray-500 uppercase tracking-wide">Status</p>
                                    <p class="text-base lg:text-lg font-semibold @(Model.IsActive ? "text-green-600" : "text-red-600")">
                                        @(Model.IsActive ? "Active" : "Inactive")
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.FaceImageUrl))
            {
                <!-- Face Image Section -->
                <div class="mt-12 pt-8 border-t border-gray-200">
                    <h3 class="text-2xl font-bold text-gray-900 mb-6 text-center">Face Recognition Image</h3>
                    <div class="flex justify-center">
                        <div class="relative group">
                            <img src="@Model.FaceImageUrl" alt="User Face" 
                                 class="rounded-2xl shadow-lg max-h-72 object-cover border-4 border-white group-hover:scale-105 transition-transform duration-300">
                            <div class="absolute inset-0 rounded-2xl bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        </div>
                    </div>
                </div>
            }

            <!-- Action Buttons -->
            <div class="mt-12 flex flex-col sm:flex-row gap-4 justify-center">
                <a asp-action="EditProfile" 
                   class="mobile-full sm:w-auto gradient-primary text-white py-4 px-8 rounded-button hover:shadow-lg hover:scale-105 transition-all duration-300 font-semibold text-center flex items-center justify-center gap-3">
                    <i class="ri-edit-line text-xl"></i>
                    <span>Edit Profile</span>
                </a>
                <a asp-action="ChangePassword" 
                   class="mobile-full sm:w-auto bg-white text-gray-700 py-4 px-8 rounded-button hover:shadow-lg hover:scale-105 transition-all duration-300 font-semibold text-center border-2 border-gray-200 hover:border-gray-300 flex items-center justify-center gap-3">
                    <i class="ri-lock-line text-xl"></i>
                    <span>Change Password</span>
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css" rel="stylesheet" />
    <script src="https://cdn.tailwindcss.com"></script>
}