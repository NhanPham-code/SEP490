<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - Stadium Booking Platform</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: "#3b82f6",
                        secondary: "#10b981",
                    },
                    borderRadius: {
                        none: "0px",
                        sm: "4px",
                        DEFAULT: "8px",
                        md: "12px",
                        lg: "16px",
                        xl: "20px",
                        "2xl": "24px",
                        "3xl": "32px",
                        full: "9999px",
                        button: "8px",
                    },
                },
            },
        };
    </script>
    <style>
                .password-toggle {
                        cursor: pointer;

        }

                .error-message {
                        opacity: 0;
                        transform: translateY(-10px);
                        transition: all 0.3s ease;

        }

                    .error-message.show {
                            opacity: 1;
                            transform: translateY(0);

        }

                .loading-spinner {
                        animation: spin 1s linear infinite;

        }

                .social-button {
                        transition: all 0.2s ease;

        }

                    .social-button:hover {
                            transform: translateY(-1px);

        }

                .form-input {
                        transition: all 0.2s ease;

        }

                    .form-input:focus {
                            transform: translateY(-1px);

        }

                .password-strength {
                        height: 4px;
                        border-radius: 2px;
                        transition: all 0.3s ease;

        }

                .strength-weak {
                        background-color: #ef4444;
                        width: 25%;

        }

                .strength-fair {
                        background-color: #f59e0b;
                        width: 50%;

        }

                .strength-good {
                        background-color: #10b981;
                        width: 75%;

        }

                .strength-strong {
                        background-color: #059669;
                        width: 100%;

        }

                .tab-button {
                        position: relative;

        }

                    .tab-button.active {
                            background-color: white;

        }

                        .tab-button.active::after {
                                content: '';
                                position: absolute;
                                bottom: -1px;
                                left: 0;
                                right: 0;
                                height: 2px;
                                background-color: #3b82f6;

        }


    </style>
</head>
@{
    var ErrorMessage = ViewData["ErrorMessage"] as string;
    var RegisterRequestDTO = ViewData["RegisterRequestDTO"] as DTOs.UserDTO.RegisterRequestDTO;
}

@if (ErrorMessage != null)
{
    <div class="alert alert-danger text-center mt-3">
        @ErrorMessage
    </div>
}

<body class="bg-gray-50 min-h-screen">
    <main class="flex-1 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-md w-full space-y-8">
            <div class="bg-white rounded-2xl shadow-xl p-8">
                <div class="flex justify-center mb-8">
                    <div class="inline-flex rounded-full p-1 bg-gray-100">
                        <button type="button" class="tab-button px-6 py-2 rounded-full text-sm font-medium transition-all duration-200 active" data-tab="signin">Sign In</button>
                        <button type="button" class="tab-button px-6 py-2 rounded-full text-sm font-medium transition-all duration-200" data-tab="signup">Sign Up</button>
                    </div>
                </div>
                <div id="signin-form" class="tab-content">
                    <div class="text-center mb-8">
                        <h2 class="text-3xl font-bold text-gray-900 mb-2">Welcome Back</h2>
                        <p class="text-gray-600">Sign in to access your account</p>
                    </div>
                    <form id="login-form" class="space-y-6" method="post">
                        <div>
                            <label for="login-email" class="block text-sm font-medium text-gray-700 mb-2">Email Address</label>
                            <div class="relative">
                                <input type="email" id="login-email" name="email" required class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Enter your email">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-mail-line text-gray-400"></i>
                                </div>
                            </div>
                        </div>
                        <div>
                            <label for="login-password" class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                            <div class="relative">
                                <input type="password" id="login-password" name="password" required class="form-input w-full px-4 py-3 pl-12 pr-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Enter your password">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-lock-line text-gray-400"></i>
                                </div>
                                <button type="button" id="login-password-toggle" class="password-toggle absolute right-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-eye-line text-gray-400"></i>
                                </button>
                            </div>
                        </div>
                        <div class="flex items-center justify-between">
                            <label class="flex items-center cursor-pointer">
                                <input type="checkbox" id="remember-me" class="mr-2 sr-only">
                                <div class="w-4 h-4 border-2 border-gray-300 rounded flex items-center justify-center">
                                    <i class="ri-check-line text-primary text-xs hidden"></i>
                                </div>
                                <span class="text-sm text-gray-600"> Remember me</span>
                            </label>
                            <a href="#" class="text-sm text-primary hover:text-blue-600">Forgot password?</a>
                        </div>
                        <button type="submit" class="w-full bg-primary text-white py-3 px-4 rounded-button hover:bg-blue-600 transition-colors whitespace-nowrap font-semibold flex items-center justify-center">
                            <span>Sign In</span>
                        </button>
                    </form>
                </div>
                <div id="signup-form" class="tab-content hidden">
                    <div class="text-center mb-8">
                        <h2 class="text-3xl font-bold text-gray-900 mb-2">Create Account</h2>
                        <p class="text-gray-600">Join our platform to book your favorite stadiums</p>
                    </div>
                    <div id="form-error" class="error-message bg-red-50 border border-red-200 rounded-lg p-4 mb-6 hidden">
                        <div class="flex items-center">
                            <div class="w-5 h-5 flex items-center justify-center mr-3">
                                <i class="ri-error-warning-line text-red-500"></i>
                            </div>
                            <p class="text-red-700 text-sm" id="error-text"></p>
                        </div>
                    </div>
                    <form id="signup-form-inner" class="space-y-6" method="post" asp-controller="Common" asp-action="Register">
                        <div>
                            <label for="fullname" class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                            <div class="relative">
                                <input type="text" id="fullname" name="fullname" required class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Enter your full name">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-user-line text-gray-400"></i>
                                </div>
                            </div>
                            <div id="fullname-error" class="error-message text-red-600 text-sm mt-1 hidden"></div>
                        </div>
                        <div>
                            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email Address</label>
                            <div class="relative">
                                <input type="email" id="email" name="email" required class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Enter your email">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-mail-line text-gray-400"></i>
                                </div>
                            </div>
                            <div id="email-error" class="error-message text-red-600 text-sm mt-1 hidden"></div>
                        </div>
                        <div>
                            <label for="address" class="block text-sm font-medium text-gray-700 mb-2">Address</label>
                            <div class="relative">
                                <input type="text" id="address" name="address" required class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Enter your address">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-home-line text-gray-400"></i>
                                </div>
                            </div>
                            <div id="address-error" class="error-message text-red-600 text-sm mt-1 hidden"></div>
                        </div>
                        <div>
                            <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                            <div class="relative">
                                <input type="tel" id="phone" name="phoneNumber" required pattern="[0-9]{10,15}" class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Enter your phone">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-phone-line text-gray-400"></i>
                                </div>
                            </div>
                            <div id="phone-error" class="error-message text-red-600 text-sm mt-1 hidden"></div>
                        </div>
                        <div>
                            <label for="password" class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                            <div class="relative">
                                <input type="password" id="password" name="password" required class="form-input w-full px-4 py-3 pl-12 pr-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Create a password">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-lock-line text-gray-400"></i>
                                </div>
                                <button type="button" id="password-toggle" class="password-toggle absolute right-4 top-3.5 w-5 h-5 flex items-center justify-center" tabindex="-1">
                                    <i class="ri-eye-line text-gray-400"></i>
                                </button>
                            </div>
                            <div class="mt-2">
                                <div class="flex justify-between items-center mb-1">
                                    <span class="text-xs text-gray-500">Password strength</span>
                                    <span id="strength-text" class="text-xs text-gray-500"></span>
                                </div>
                                <div class="w-full bg-gray-200 rounded-full h-1">
                                    <div id="strength-bar" class="password-strength bg-gray-200"></div>
                                </div>
                            </div>
                            <div id="password-error" class="error-message text-red-600 text-sm mt-1 hidden"></div>
                        </div>
                        <div>
                            <label for="confirm-password" class="block text-sm font-medium text-gray-700 mb-2">Confirm Password</label>
                            <div class="relative">
                                <input type="password" id="confirm-password" name="confirm-password" required class="form-input w-full px-4 py-3 pl-12 pr-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm" placeholder="Confirm your password">
                                <div class="absolute left-4 top-3.5 w-5 h-5 flex items-center justify-center">
                                    <i class="ri-lock-line text-gray-400"></i>
                                </div>
                                <button type="button" id="confirm-password-toggle" class="password-toggle absolute right-4 top-3.5 w-5 h-5 flex items-center justify-center" tabindex="-1">
                                    <i class="ri-eye-line text-gray-400"></i>
                                </button>
                            </div>
                            <div id="confirm-password-error" class="error-message text-red-600 text-sm mt-1 hidden"></div>
                        </div>
                        <div class="flex items-start">
                            <label class="flex items-start cursor-pointer">
                                <input type="checkbox" id="terms" name="terms" required class="mr-3 mt-1 sr-only">
                                <div class="w-5 h-5 border-2 border-gray-300 rounded flex items-center justify-center mr-3 mt-0.5 transition-colors">
                                    <i class="ri-check-line text-primary text-sm hidden"></i>
                                </div>
                                <span class="text-sm text-gray-700 leading-5">
                                    I agree to the
                                    <a href="#" class="text-primary hover:text-blue-600 transition-colors">Terms of Service</a>
                                    and
                                    <a href="#" class="text-primary hover:text-blue-600 transition-colors">Privacy Policy</a>
                                </span>
                            </label>
                        </div>
                        <div id="terms-error" class="error-message text-red-600 text-sm mt-1 hidden"></div>
                        <button type="submit" id="signup-btn" class="w-full bg-primary text-white py-3 px-4 rounded-button hover:bg-blue-600 transition-colors whitespace-nowrap font-semibold flex items-center justify-center">
                            <span id="signup-text">Create Account</span>
                            <div id="signup-spinner" class="loading-spinner w-5 h-5 border-2 border-white border-t-transparent rounded-full ml-2 hidden"></div>
                        </button>
                        <div class="relative my-6">
                            <div class="absolute inset-0 flex items-center">
                                <div class="w-full border-t border-gray-300"></div>
                            </div>
                            <div class="relative flex justify-center text-sm">
                                <span class="px-4 bg-white text-gray-500">or continue with</span>
                            </div>
                        </div>
                        <div class="space-y-3">
                            <button type="button" class="social-button w-full flex items-center justify-center px-4 py-3 border border-gray-300 rounded-button hover:bg-gray-50 transition-all whitespace-nowrap">
                                <div class="w-5 h-5 flex items-center justify-center mr-3">
                                    <i class="ri-google-fill text-red-500"></i>
                                </div>
                                <span class="text-gray-700 font-medium">Sign up with Google</span>
                            </button>
                        </div>
                        <div class="text-center pt-4">
                            <p class="text-gray-600">
                                Already have an account?
                                <a href="https://readdy.ai/home/6e478e59-67a3-479d-b717-11cb821df867/1e671e07-9379-42a1-892f-d1ea2862e449" data-readdy="true" class="text-primary hover:text-blue-600 font-semibold transition-colors">Sign In</a>
                            </p>
                        </div>
                    </form>
                </div>
                <div class="text-center">
                    <p class="text-sm text-gray-500">
                        By creating an account, you agree to our
                        <a href="#" class="text-primary hover:text-blue-600 transition-colors">Terms of Service</a>
                        and
                        <a href="#" class="text-primary hover:text-blue-600 transition-colors">Privacy Policy</a>
                    </p>
                </div>
            </div>
        </div>
    </main>
    <footer class="bg-white border-t border-gray-200 py-8">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center text-gray-500 text-sm">
                <p>&copy; 2025 Stadium Booking Platform. All rights reserved.</p>
            </div>
        </div>
    </footer>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // === 1. DOM Elements ===
            const signinTab = document.querySelector('[data-tab="signin"]');
            const signupTab = document.querySelector('[data-tab="signup"]');
            const signinForm = document.getElementById('signin-form');
            const signupForm = document.getElementById('signup-form');
            const signupFormInner = document.getElementById('signup-form-inner');
            const signupBtn = document.getElementById('signup-btn');
            const signupText = document.getElementById('signup-text');
            const signupSpinner = document.getElementById('signup-spinner');

            const loginPasswordInput = document.getElementById('login-password');
            const loginPasswordToggle = document.getElementById('login-password-toggle');
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirm-password');
            const passwordToggle = document.getElementById('password-toggle');
            const confirmPasswordToggle = document.getElementById('confirm-password-toggle');

            const strengthBar = document.getElementById('strength-bar');
            const strengthText = document.getElementById('strength-text');
            const termsCheckbox = document.getElementById('terms');
            const rememberMeCheckbox = document.getElementById('remember-me');

            // Mảng chứa các đối tượng để quản lý các trường input và thông báo lỗi của chúng
            const formFields = [
                { id: 'fullname', errorId: 'fullname-error', regex: /^[a-zA-Z\s]{2,}$/, message: 'Họ tên phải có ít nhất 2 ký tự và không chứa số.' },
                { id: 'email', errorId: 'email-error', regex: /^[^@@]+@@[^@@]+\.[^@@]+$/, message: 'Vui lòng nhập một địa chỉ email hợp lệ.' },
                { id: 'address', errorId: 'address-error', regex: /^.{5,}$/, message: 'Địa chỉ phải có ít nhất 5 ký tự.' },
                { id: 'phone', errorId: 'phone-error', regex: /^\d{10,15}$/, message: 'Số điện thoại phải có từ 10-15 chữ số.' },
            ];

            // === 2. Tab Switching Logic ===
            const switchTab = (tabName) => {
                if (tabName === 'signin') {
                    signinTab.classList.add('active');
                    signupTab.classList.remove('active');
                    signinForm.classList.remove('hidden');
                    signupForm.classList.add('hidden');
                } else if (tabName === 'signup') {
                    signupTab.classList.add('active');
                    signinTab.classList.remove('active');
                    signupForm.classList.remove('hidden');
                    signinForm.classList.add('hidden');
                }
            };
            signinTab.addEventListener('click', () => switchTab('signin'));
            signupTab.addEventListener('click', () => switchTab('signup'));

            // === 3. Password Visibility Toggles ===
            const setupPasswordToggle = (inputElement, toggleButton) => {
                const iconElement = toggleButton.querySelector('i');
                toggleButton.addEventListener('click', () => {
                    const isPassword = inputElement.type === 'password';
                    inputElement.type = isPassword ? 'text' : 'password';
                    iconElement.className = isPassword ? 'ri-eye-off-line text-gray-400' : 'ri-eye-line text-gray-400';
                });
            };
            setupPasswordToggle(loginPasswordInput, loginPasswordToggle);
            setupPasswordToggle(passwordInput, passwordToggle);
            setupPasswordToggle(confirmPasswordInput, confirmPasswordToggle);

            // === 4. Password Strength Checker ===
            const getPasswordStrength = (password) => {
                let strength = 0;
                if (password.length >= 8) strength++;
                if (/[a-z]/.test(password) && /[A-Z]/.test(password)) strength++;
                if (/\d/.test(password)) strength++;
                if (/[^a-zA-Z\d\s]/.test(password)) strength++;
                return strength;
            };

            const updatePasswordStrengthUI = (password) => {
                const strength = getPasswordStrength(password);
                let strengthClass = '';
                let strengthTextContent = '';

                if (password.length > 0) {
                    if (strength <= 1) {
                        strengthClass = 'strength-weak';
                        strengthTextContent = 'Yếu';
                    } else if (strength === 2) {
                        strengthClass = 'strength-fair';
                        strengthTextContent = 'Trung bình';
                    } else if (strength === 3) {
                        strengthClass = 'strength-good';
                        strengthTextContent = 'Tốt';
                    } else if (strength >= 4) {
                        strengthClass = 'strength-strong';
                        strengthTextContent = 'Rất tốt';
                    }
                }
                strengthBar.className = `password-strength ${strengthClass}`;
                strengthText.textContent = strengthTextContent;
            };

            passwordInput.addEventListener('input', (event) => {
                updatePasswordStrengthUI(event.target.value);
            });

            // === 5. Custom Checkbox Logic ===
            const setupCustomCheckbox = (checkbox) => {
                const iconElement = checkbox.nextElementSibling.querySelector('i');
                checkbox.addEventListener('change', () => {
                    iconElement.classList.toggle('hidden', !checkbox.checked);
                });
            };
            setupCustomCheckbox(termsCheckbox);
            setupCustomCheckbox(rememberMeCheckbox);

            // === 6. Real-time Validation and Submission Handling ===
            const showError = (elementId, message) => {
                const errorElement = document.getElementById(elementId);
                errorElement.textContent = message;
                errorElement.classList.remove('hidden');
                setTimeout(() => errorElement.classList.add('show'), 10);
            };

            const hideError = (elementId) => {
                const errorElement = document.getElementById(elementId);
                errorElement.classList.remove('show');
                setTimeout(() => {
                    errorElement.classList.add('hidden');
                    errorElement.textContent = '';
                }, 300);
            };

            const validateField = (field, value) => {
                if (!value || !field.regex.test(value)) {
                    showError(field.errorId, field.message);
                    return false;
                }
                hideError(field.errorId);
                return true;
            };

            // Thêm validation khi người dùng rời khỏi trường nhập
            formFields.forEach(field => {
                const inputElement = document.getElementById(field.id);
                if (inputElement) {
                    inputElement.addEventListener('blur', (e) => {
                        validateField(field, e.target.value);
                    });
                }
            });

            // Validation đặc biệt cho mật khẩu và xác nhận mật khẩu
            passwordInput.addEventListener('blur', () => {
                const password = passwordInput.value;
                const strength = getPasswordStrength(password);
                if (password.length > 0 && strength < 3) {
                    showError('password-error', 'Mật khẩu phải đạt độ mạnh "Tốt" trở lên.');
                } else {
                    hideError('password-error');
                }
            });

            confirmPasswordInput.addEventListener('blur', () => {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                if (confirmPassword.length > 0 && password !== confirmPassword) {
                    showError('confirm-password-error', 'Mật khẩu xác nhận không khớp.');
                } else {
                    hideError('confirm-password-error');
                }
            });

            // Validation cho ô checkbox điều khoản
            termsCheckbox.addEventListener('change', () => {
                if (!termsCheckbox.checked) {
                    showError('terms-error', 'Bạn phải đồng ý với Điều khoản và Chính sách quyền riêng tư.');
                } else {
                    hideError('terms-error');
                }
            });

            // Xử lý sự kiện khi form được gửi đi
            signupFormInner.addEventListener('submit', (event) => {
                // Ngăn form gửi đi mặc định
                event.preventDefault();

                // Chạy lại tất cả validation cuối cùng
                let isValid = true;
                formFields.forEach(field => {
                    const inputElement = document.getElementById(field.id);
                    if (!validateField(field, inputElement.value)) {
                        isValid = false;
                    }
                });

                // Kiểm tra validation đặc biệt
                if (getPasswordStrength(passwordInput.value) < 3) {
                    showError('password-error', 'Mật khẩu phải đạt độ mạnh "Tốt" trở lên.');
                    isValid = false;
                }
                if (passwordInput.value !== confirmPasswordInput.value) {
                    showError('confirm-password-error', 'Mật khẩu xác nhận không khớp.');
                    isValid = false;
                }
                if (!termsCheckbox.checked) {
                    showError('terms-error', 'Bạn phải đồng ý với Điều khoản và Chính sách quyền riêng tư.');
                    isValid = false;
                }

                // Nếu form hợp lệ, hiển thị hiệu ứng loading và gửi form đi
                if (isValid) {
                    signupText.classList.add('hidden');
                    signupSpinner.classList.remove('hidden');
                    signupBtn.disabled = true;

                    // **Sửa lỗi: Thêm dòng này để gửi form đi sau khi validation thành công**
                    signupFormInner.submit();
                }
            });
        });
    </script>
</body>
</html>