@* <!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đặt Sân Thể Thao</title>
    <!-- Thư viện Tailwind CSS cho styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Font chữ Inter từ Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="~/css/Booking/Booking.css" asp-append-version="true" />

</head>
<body>
    <div class="clocks-container">
        <!-- AM Clock -->
        <div class="clock am-clock">
            <div class="icon sun-icon">☀️</div>
            <div class="clock-face">
                <svg class="hour-sectors-svg" viewBox="0 0 200 200" id="am-sectors">
                    <!-- 12 sectors will be generated by JavaScript -->
                </svg>
                <div class="hour-numbers">
                    <div class="hour-number" style="transform: rotate(0deg) translate(0, -70px) rotate(0deg);">12</div>
                    <div class="hour-number" style="transform: rotate(30deg) translate(0, -70px) rotate(-30deg);">1</div>
                    <div class="hour-number" style="transform: rotate(60deg) translate(0, -70px) rotate(-60deg);">2</div>
                    <div class="hour-number" style="transform: rotate(90deg) translate(0, -70px) rotate(-90deg);">3</div>
                    <div class="hour-number" style="transform: rotate(120deg) translate(0, -70px) rotate(-120deg);">4</div>
                    <div class="hour-number" style="transform: rotate(150deg) translate(0, -70px) rotate(-150deg);">5</div>
                    <div class="hour-number" style="transform: rotate(180deg) translate(0, -70px) rotate(-180deg);">6</div>
                    <div class="hour-number" style="transform: rotate(210deg) translate(0, -70px) rotate(-210deg);">7</div>
                    <div class="hour-number" style="transform: rotate(240deg) translate(0, -70px) rotate(-240deg);">8</div>
                    <div class="hour-number" style="transform: rotate(270deg) translate(0, -70px) rotate(-270deg);">9</div>
                    <div class="hour-number" style="transform: rotate(300deg) translate(0, -70px) rotate(-300deg);">10</div>
                    <div class="hour-number" style="transform: rotate(330deg) translate(0, -70px) rotate(-330deg);">11</div>
                </div>
                <div class="center-dot"></div>
            </div>
            <div class="clock-label">Morning Time</div>
            <button class="reset-button" onclick="resetClock('am-sectors')">Reset</button>
        </div>

        <!-- PM Clock -->
        <div class="clock pm-clock">
            <div class="icon moon-icon">🌙</div>
            <div class="clock-face">
                <svg class="hour-sectors-svg" viewBox="0 0 200 200" id="pm-sectors">
                    <!-- 12 sectors will be generated by JavaScript -->
                </svg>
                <div class="hour-numbers">
                    <div class="hour-number" style="transform: rotate(0deg) translate(0, -70px) rotate(0deg);">12</div>
                    <div class="hour-number" style="transform: rotate(30deg) translate(0, -70px) rotate(-30deg);">1</div>
                    <div class="hour-number" style="transform: rotate(60deg) translate(0, -70px) rotate(-60deg);">2</div>
                    <div class="hour-number" style="transform: rotate(90deg) translate(0, -70px) rotate(-90deg);">3</div>
                    <div class="hour-number" style="transform: rotate(120deg) translate(0, -70px) rotate(-120deg);">4</div>
                    <div class="hour-number" style="transform: rotate(150deg) translate(0, -70px) rotate(-150deg);">5</div>
                    <div class="hour-number" style="transform: rotate(180deg) translate(0, -70px) rotate(-180deg);">6</div>
                    <div class="hour-number" style="transform: rotate(210deg) translate(0, -70px) rotate(-210deg);">7</div>
                    <div class="hour-number" style="transform: rotate(240deg) translate(0, -70px) rotate(-240deg);">8</div>
                    <div class="hour-number" style="transform: rotate(270deg) translate(0, -70px) rotate(-270deg);">9</div>
                    <div class="hour-number" style="transform: rotate(300deg) translate(0, -70px) rotate(-300deg);">10</div>
                    <div class="hour-number" style="transform: rotate(330deg) translate(0, -70px) rotate(-330deg);">11</div>
                </div>
                <div class="center-dot"></div>
            </div>
            <div class="clock-label">Evening Time</div>
            <button class="reset-button" onclick="resetClock('pm-sectors')">Reset</button>
        </div>
    </div>

    <script>
        function createHourSectors(svgId) {
            const svg = document.getElementById(svgId);
            const centerX = 100;
            const centerY = 100;
            const outerRadius = 85;
            const innerRadius = 15;

            // Tạo 12 sector (mỗi sector = 30 độ)
            for (let i = 0; i < 12; i++) {
                // Tính góc bắt đầu và kết thúc (tính bằng radian)
                const startAngle = (i * 30 - 90) * Math.PI / 180; // -90 để bắt đầu từ 12h
                const endAngle = ((i + 1) * 30 - 90) * Math.PI / 180;

                // Tính tọa độ các điểm
                const x1 = centerX + innerRadius * Math.cos(startAngle);
                const y1 = centerY + innerRadius * Math.sin(startAngle);
                const x2 = centerX + outerRadius * Math.cos(startAngle);
                const y2 = centerY + outerRadius * Math.sin(startAngle);
                const x3 = centerX + outerRadius * Math.cos(endAngle);
                const y3 = centerY + outerRadius * Math.sin(endAngle);
                const x4 = centerX + innerRadius * Math.cos(endAngle);
                const y4 = centerY + innerRadius * Math.sin(endAngle);

                // Tạo path cho sector
                const pathData = [
                    `M ${x1} ${y1}`, // Move to inner start
                    `L ${x2} ${y2}`, // Line to outer start
                    `A ${outerRadius} ${outerRadius} 0 0 1 ${x3} ${y3}`, // Arc to outer end
                    `L ${x4} ${y4}`, // Line to inner end
                    `A ${innerRadius} ${innerRadius} 0 0 0 ${x1} ${y1}`, // Arc to inner start
                    'Z' // Close path
                ].join(' ');

                // Tạo path element
                const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
                path.setAttribute('d', pathData);
                path.setAttribute('class', 'hour-sector');
                path.setAttribute('data-hour', i);

                // Tính label cho sector
                const currentHour = i === 0 ? 12 : i;
                const nextHour = (i + 1) === 12 ? 12 : (i + 1);
                const nextHourDisplay = nextHour === 0 ? 12 : nextHour;

                // Thêm title cho tooltip
                const title = document.createElementNS('http://www.w3.org/2000/svg', 'title');
                title.textContent = `Khu vực ${currentHour}-${nextHourDisplay}`;
                path.appendChild(title);

                // Thêm event listener
                path.addEventListener('click', function(e) {
                    e.stopPropagation();
                    toggleSector(this);
                });

                svg.appendChild(path);
            }
        }

        function toggleSector(sector) {
            sector.classList.toggle('selected');

            // Thêm hiệu ứng nhấp nháy khi click
            sector.style.transform = 'scale(1.05)';
            setTimeout(() => {
                sector.style.transform = '';
            }, 150);
        }

        function resetClock(svgId) {
            const svg = document.getElementById(svgId);
            const sectors = svg.querySelectorAll('.hour-sector');
            sectors.forEach(sector => {
                sector.classList.remove('selected');
            });
        }

        // Khởi tạo khi trang load
        document.addEventListener('DOMContentLoaded', function() {
            createHourSectors('am-sectors');
            createHourSectors('pm-sectors');

            console.log('Đồng hồ tương tác đã sẵn sàng! Click vào các khu vực để chọn.');
        });
    </script>
</body>
</html>

 *@

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bảng Thời Gian Biểu</title>
    <style>
        .flag-container {
            width: 100px;
            height: 100px;
            display: flex; /* bật flexbox */
            justify-content: center; /* căn giữa ngang */
            align-items: center; /* căn giữa dọc */
            border: 1px solid #ccc; /* chỉ để nhìn khung */
            background: #f9f9f9;
        }

        .flag {
            width: 100%; /* tự co giãn theo khung */
            height: auto; /* giữ tỉ lệ 2:3 */
        }

    </style>
</head>
<body>
    <div class="flag-container">
        <!-- Responsive Vietnam Flag -->
        <svg xmlns="http://www.w3.org/2000/svg"
             viewBox="0 0 300 200"
             class="flag"
             role="img" aria-label="Flag of Vietnam">
            <!-- Yellow five-pointed star -->
            <polygon fill="#FFDE00" points="
        150.0000,40.0000
        163.4708,81.4590
        207.0634,81.4590
        171.7963,107.0820
        185.2671,148.5410
        150.0000,122.9180
        114.7329,148.5410
        128.2037,107.0820
        92.9366,81.4590
        136.5292,81.4590" />
        </svg>
    </div>
</body>

</html>




