<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đặt Sân Thể Thao</title>
    <!-- Thư viện Tailwind CSS cho styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Font chữ Inter từ Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* CSS tuỳ chỉnh */
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f4f8; /* Màu nền nhẹ nhàng, tươi sáng */
            color: #1f2937; /* Màu chữ tối */
        }

        .time-button {
            transition: all 0.2s ease-in-out;
            cursor: pointer;
        }

            .time-button.selected {
                background-color: #3b82f6; /* Màu xanh lam tươi mới */
                color: white;
                box-shadow: 0 4px 6px -1px rgb(59 130 246 / 0.3), 0 2px 4px -2px rgb(59 130 246 / 0.2);
                transform: scale(1.05);
            }

            .time-button:hover:not(.selected):not([disabled]) {
                background-color: #dbeafe; /* Màu nền khi hover */
            }

        .modal {
            background-color: rgba(0, 0, 0, 0.5);
            display: none; /* Ẩn ban đầu */
        }

        .slider-container {
            max-width: 100%;
            position: relative;
            margin: auto;
            border-radius: 1rem;
            overflow: hidden;
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        }

        .slider-image {
            display: none;
            width: 100%;
            height: auto;
            aspect-ratio: 21 / 9;
            object-fit: cover;
            transition: opacity 1s ease-in-out;
        }

        .slider-prev, .slider-next {
            cursor: pointer;
            position: absolute;
            top: 50%;
            width: auto;
            margin-top: -22px;
            padding: 16px;
            color: white;
            font-weight: bold;
            font-size: 20px;
            transition: 0.6s ease;
            user-select: none;
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 0 3px 3px 0;
        }

        .slider-next {
            right: 0;
            border-radius: 3px 0 0 3px;
        }

            .slider-prev:hover, .slider-next:hover {
                background-color: rgba(0, 0, 0, 0.8);
            }
    </style>
</head>
<body class="min-h-screen p-4 flex items-center justify-center">

    <!-- Modal tùy chỉnh cho thông báo -->
    <div id="custom-modal" class="modal fixed inset-0 z-50 flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 shadow-xl max-w-sm w-full mx-4">
            <h3 id="modal-title" class="text-xl font-bold text-gray-800 mb-2"></h3>
            <p id="modal-message" class="text-gray-600 mb-4"></p>
            <div class="text-right">
                <button id="modal-close-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg">Đóng</button>
            </div>
        </div>
    </div>

    <!-- Container chính của trang web -->
    <div id="main-booking-container" class="bg-white rounded-2xl shadow-lg p-6 md:p-8 max-w-4xl w-full mx-auto">

        <!-- Thanh trượt hình ảnh tự động -->
        <div class="slider-container mb-10">
            <img class="slider-image" src="https://placehold.co/1024x438/3b82f6/ffffff?text=Sân+1" alt="Sân vận động 1">
            <img class="slider-image" src="https://placehold.co/1024x438/22c55e/ffffff?text=Sân+2" alt="Sân vận động 2">
            <img class="slider-image" src="https://placehold.co/1024x438/f97316/ffffff?text=Sân+3" alt="Sân vận động 3">

            <a class="slider-prev" onclick="plusSlides(-1)">&#10094;</a>
            <a class="slider-next" onclick="plusSlides(1)">&#10095;</a>
        </div>

        <!-- Thông tin sân vận động -->
        <div class="mb-6 text-center">
            <h1 id="stadium-name" class="text-3xl font-bold text-blue-600 mb-2"></h1>
            <p id="stadium-address" class="text-sm text-gray-500 mb-4"></p>

            <!-- Thêm thông tin chi tiết -->
            <div class="inline-flex gap-4 p-4 bg-gray-100 rounded-lg shadow-inner">
                <p class="text-sm text-gray-600">
                    <span class="font-semibold text-gray-800">Giờ mở cửa:</span> <span id="stadium-hours"></span>
                </p>
            </div>
        </div>

        <!-- Bản đồ -->
        <div class="mb-8">
            <h2 class="text-xl font-semibold mb-4 text-center text-blue-700">Bản đồ</h2>
            <div class="rounded-xl overflow-hidden shadow-lg border border-gray-200">
                <!-- Sử dụng iframe để nhúng Google Maps -->
                <iframe id="stadium-map"
                        width="100%"
                        height="300"
                        style="border:0;"
                        allowfullscreen=""
                        loading="lazy"
                        referrerpolicy="no-referrer-when-downgrade"
                        src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.553950669145!2d106.66442651474932!3d10.769931892323048!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31752f1e29e9447d%3A0x7d0e405e3a89e103!2zS2h1IEdp4bqjaSB0csOtIFRo4buRbmcgTmjqdCwgUGjGsOG7nW5nIDIsIFF14bqtbiAxMCwgVGjDoG5oIHBo4buRIEjhu5MgQ2jDrSBNaW5oLCBWaeG7h3QgTmFt!5e0!3m2!1svi!2s!4v1678893922639!5m2!1svi!2s"></iframe>
            </div>
        </div>

        <!-- Khu vực chọn ngày và giờ -->
        <div class="mb-8 p-4 bg-blue-50 rounded-xl shadow-inner">
            <h2 class="text-xl font-semibold mb-4 text-blue-700">Chọn ngày và thời gian của bạn</h2>
            <div class="flex flex-col md:flex-row gap-4 mb-4 items-center">
                <div class="flex-1 w-full">
                    <label for="date-picker" class="block text-sm font-medium text-gray-700 mb-1">Chọn ngày</label>
                    <input type="date" id="date-picker" class="block w-full bg-white border border-gray-300 hover:border-gray-500 px-4 py-2 rounded-lg shadow leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200 text-gray-700" />
                </div>
                <div class="flex-1 w-full">
                    <label for="court-type-select" class="block text-sm font-medium text-gray-700 mb-1">Chọn loại sân</label>
                    <div class="relative">
                        <select id="court-type-select" class="block appearance-none w-full bg-white border border-gray-300 hover:border-gray-500 px-4 py-2 pr-8 rounded-lg shadow leading-tight focus:outline-none focus:shadow-outline transition-colors duration-200 text-gray-700">
                            <!-- Các lựa chọn sẽ được thêm bằng JS -->
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" /></svg>
                        </div>
                    </div>
                </div>
            </div>

            <div id="time-buttons-container" class="flex flex-wrap gap-2 justify-center">
                <!-- Nút giờ sẽ được JavaScript thêm vào đây -->
            </div>
            <p id="time-display" class="mt-4 text-center text-sm text-gray-600"></p>
        </div>

        <!-- Danh sách sân -->
        <div class="mb-8">
            <h2 class="text-xl font-semibold mb-4 text-center text-blue-700">Danh sách sân trống</h2>
            <div id="courts-container" class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
                <!-- Danh sách sân sẽ được JavaScript thêm vào đây -->
            </div>
        </div>

        <!-- Nút Tiếp tục -->
        <div class="text-center mt-8">
            <button id="continue-button" disabled
                    class="w-full md:w-auto px-12 py-3 rounded-xl font-bold text-white transition-all duration-300 shadow-md bg-gray-400 cursor-not-allowed">
                Tiếp tục
            </button>
        </div>

        <!-- Khu vực Phản hồi -->
        <div class="mt-10 p-6 bg-gray-100 rounded-xl shadow-inner">
            <h2 class="text-xl font-semibold mb-4 text-center text-gray-800">Gửi phản hồi</h2>
            <form id="feedback-form">
                <textarea id="feedback-textarea" rows="4" class="w-full p-3 rounded-lg border border-gray-300 bg-white text-gray-800 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200" placeholder="Hãy chia sẻ ý kiến của bạn về sân vận động..."></textarea>
                <div class="text-right mt-4">
                    <button type="submit" class="px-6 py-2 rounded-lg font-bold text-white bg-blue-600 hover:bg-blue-700 transition-colors duration-300">Gửi phản hồi</button>
                </div>
            </form>
        </div>

        <form id="bookingForm" method="post" action="/Booking/Checkout">
            <input type="hidden" name="Date" />
            <input type="hidden" name="StartTime" />
            <input type="hidden" name="EndTime" />
            <input type="hidden" name="TotalPrice" />
            <input type="hidden" name="CourtId" />
            <input type="hidden" name="StadiumId" />
        </form>

    </div>

    <script>
        // Dữ liệu giả định cho sân vận động và các sân con, mô phỏng việc lấy dữ liệu từ API
        const mockStadiumData = {
            id: '1',
            name: 'Sân vận động Thống Nhất',
            address: '138 Đ. Đào Duy Từ, Phường 6, Quận 10, Thành phố Hồ Chí Minh',
            openTime: '5:00',
            closeTime: '22:00',
            pricePerHour: '200,000 VNĐ', // Thêm giá thuê vào dữ liệu
            courts: [
                { id: '1', name: 'Sân số 1', type: 'Sân bóng đá 5 người', bookings: [8, 9, 10] },
                { id: '2', name: 'Sân số 2', type: 'Sân bóng đá 5 người', bookings: [15, 16] },
                { id: '3', name: 'Sân số 3', type: 'Sân tennis', bookings: [11, 12, 13] },
                { id: '4', name: 'Sân số 4', type: 'Sân tennis', bookings: [] },
                { id: '5', name: 'Sân số 5', type: 'Sân cầu lông', bookings: [17, 18] },
                { id: '6', name: 'Sân số 6', type: 'Sân cầu lông', bookings: [] },
            ],
        };

        // Biến trạng thái toàn cục của ứng dụng
        let stadiumData = mockStadiumData;
        let startTime = null;
        let endTime = null;
        let selectedCourts = []; // Đã đổi biến thành mảng để chọn nhiều sân
        let selectedCourtType = null;
        let selectedDate = new Date().toISOString().split('T')[0];

        // Tạo một mảng các giờ từ 5:00 đến 22:00
        const allHours = Array.from({ length: 18 }, (_, i) => i + 5);
        // Lấy danh sách các loại sân duy nhất
        const courtTypes = [...new Set(mockStadiumData.courts.map(court => court.type))];

        // Lấy các element cần tương tác
        const stadiumNameEl = document.getElementById('stadium-name');
        const stadiumAddressEl = document.getElementById('stadium-address');
        const stadiumHoursEl = document.getElementById('stadium-hours');
        const courtTypeSelectEl = document.getElementById('court-type-select');
        const datePickerEl = document.getElementById('date-picker');
        const timeButtonsContainerEl = document.getElementById('time-buttons-container');
        const courtsContainerEl = document.getElementById('courts-container');
        const timeDisplayEl = document.getElementById('time-display');
        const continueButtonEl = document.getElementById('continue-button');
        const feedbackFormEl = document.getElementById('feedback-form');

        // Hàm hiển thị modal thông báo tùy chỉnh
        function showModal(title, message) {
            document.getElementById('modal-title').textContent = title;
            document.getElementById('modal-message').textContent = message;
            document.getElementById('custom-modal').style.display = 'flex';
        }

        // Hàm ẩn modal
        function hideModal() {
            document.getElementById('custom-modal').style.display = 'none';
        }

        // Hàm render thông tin sân vận động
        function renderStadiumInfo() {
            stadiumNameEl.textContent = stadiumData.name;
            stadiumAddressEl.textContent = stadiumData.address;
            stadiumHoursEl.textContent = `${stadiumData.openTime} - ${stadiumData.closeTime}`;
        }

        // Hàm xử lý khi người dùng chọn giờ
        function handleTimeSelect(hour) {
            if (startTime === null || (startTime !== null && endTime !== null)) {
                // Nếu chưa có giờ bắt đầu hoặc đã có cả 2, chọn giờ bắt đầu mới
                startTime = hour;
                endTime = null; // Reset giờ kết thúc
            } else if (hour > startTime) {
                // Nếu giờ được chọn sau giờ bắt đầu, chọn giờ kết thúc
                endTime = hour;
            } else {
                // Nếu giờ được chọn trước hoặc bằng giờ bắt đầu, chọn lại giờ bắt đầu mới
                startTime = hour;
                endTime = null;
            }
            // Reset sân đã chọn khi thay đổi thời gian
            selectedCourts = [];
            updateUI();
        }

            // Hàm cập nhật giao diện người dùng
        function updateUI() {
            // Cập nhật các nút giờ
            renderTimeButtons();

            // Lọc sân theo loại sân đã chọn (bước này vẫn giữ lại)
            let filteredCourts = stadiumData.courts;
            if (selectedCourtType) {
                filteredCourts = filteredCourts.filter(court => court.type === selectedCourtType);
            }

            let isContinueButtonEnabled = false;

            if (startTime !== null && endTime !== null && endTime > startTime) {
                const duration = endTime - startTime;
                const pricePerCourt = parseInt(stadiumData.pricePerHour.replace(/[^0-9]/g, '')) * duration;
                const totalPrice = pricePerCourt * selectedCourts.length;

                const dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                const formattedDate = new Date(selectedDate).toLocaleDateString('vi-VN', dateOptions);

                const totalDisplayPrice = totalPrice.toLocaleString('vi-VN');
                timeDisplayEl.textContent = `Bạn đã chọn: ${formattedDate}, từ ${startTime}:00 đến ${endTime}:00 (${duration} giờ). Tổng giá dự kiến: ${totalDisplayPrice} VNĐ`;

                // Nút Tiếp tục chỉ được bật nếu đã có ít nhất một sân được chọn
                isContinueButtonEnabled = selectedCourts.length > 0;
            } else {
                timeDisplayEl.textContent = '';
            }

            // Cập nhật danh sách sân. Truyền danh sách sân đã lọc theo loại (nếu có)
            renderCourts(filteredCourts);

            // Cập nhật trạng thái nút "Tiếp tục"
            if (isContinueButtonEnabled) {
                continueButtonEl.disabled = false;
                continueButtonEl.classList.remove('bg-gray-400', 'cursor-not-allowed');
                continueButtonEl.classList.add('bg-blue-600', 'hover:bg-blue-700', 'hover:shadow-lg');
            } else {
                continueButtonEl.disabled = true;
                continueButtonEl.classList.add('bg-gray-400', 'cursor-not-allowed');
                continueButtonEl.classList.remove('bg-blue-600', 'hover:bg-blue-700', 'hover:shadow-lg');
            }
        }

            // Hàm render danh sách sân
        function renderCourts(courts) {
            courtsContainerEl.innerHTML = ''; // Xóa danh sách cũ

            if (courts.length === 0) {
                courtsContainerEl.innerHTML = `<p class="col-span-full text-center text-gray-500 italic">Không có sân nào phù hợp với loại sân đã chọn.</p>`;
                return;
            }

            courts.forEach(court => {
                const isAvailable = (startTime === null || endTime === null || endTime <= startTime) ||
                                    !court.bookings.some(bookedHour => bookedHour >= startTime && bookedHour < endTime);

                const isSelected = selectedCourts.some(selected => selected.id === court.id);

                const courtDiv = document.createElement('div');

                let courtStatusClass = 'border-gray-200';
                if (isAvailable) {
                    courtStatusClass = 'border-green-400';
                } else {
                    courtStatusClass = 'border-red-400';
                }

                courtDiv.className = `bg-white rounded-xl shadow-md p-4 transition-transform duration-200 border-2 ${courtStatusClass}`;

                if (isAvailable && startTime !== null && endTime !== null && endTime > startTime) {
                    courtDiv.classList.add('hover:scale-105', 'hover:shadow-lg', 'cursor-pointer');
                    courtDiv.addEventListener('click', () => {
                        const courtIndex = selectedCourts.findIndex(selected => selected.id === court.id);
                        if (courtIndex !== -1) {
                            selectedCourts.splice(courtIndex, 1);
                        } else {
                            selectedCourts.push(court);
                        }
                        updateUI();
                    });
                } else {
                    courtDiv.classList.add('opacity-50', 'cursor-not-allowed');
                }

                if (isSelected) {
                    courtDiv.classList.add('scale-105', 'border-blue-600', 'ring-2', 'ring-blue-600');
                }

                courtDiv.innerHTML = `
                    <h3 class="text-lg font-bold ${isAvailable ? 'text-green-600' : 'text-red-600'}">${court.name}</h3>
                    <p class="text-sm text-gray-500">${court.type}</p>
                    <p class="text-sm text-gray-800 font-bold mt-2">Giá: ${stadiumData.pricePerHour}/giờ</p>
                    <p class="text-xs mt-2 ${isAvailable ? 'text-green-500 font-medium' : 'text-red-500 font-medium'}">
                        ${isAvailable ? 'Sân trống - Có thể đặt' : 'Sân đã có người đặt'}
                    </p>
                `;
                courtsContainerEl.appendChild(courtDiv);
            });
        }

        // Hàm render các nút giờ
        function renderTimeButtons() {
            timeButtonsContainerEl.innerHTML = '';
            allHours.forEach(hour => {
                const button = document.createElement('button');
                button.textContent = `${hour}:00`;
                button.className = `time-button px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 bg-gray-200 text-gray-700 hover:bg-gray-300`;
                button.onclick = () => handleTimeSelect(hour);

                if (startTime !== null && endTime !== null && hour > startTime && hour < endTime) {
                    button.classList.add('bg-blue-200', 'text-blue-800');
                    button.classList.remove('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300');
                }
                if (hour === startTime || hour === endTime) {
                    button.classList.add('selected', 'bg-blue-600', 'text-white');
                    button.classList.remove('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300');
                }
                if ((endTime !== null && hour < startTime) || (startTime !== null && endTime === null && hour > 21)) {
                    button.disabled = true;
                    button.classList.add('opacity-50', 'cursor-not-allowed');
                    button.classList.remove('hover:bg-gray-300');
                }
                timeButtonsContainerEl.appendChild(button);
            });
        }

        // Hàm mô phỏng chuyển sang trang checkout
        function showCheckoutPage() {
            if (selectedCourts.length === 0 || startTime === null || endTime === null) {
                showModal('Thông báo', 'Vui lòng chọn đầy đủ thông tin: ngày, giờ và ít nhất một sân.');
                return;
            }

            const duration = endTime - startTime;
            const pricePerCourt = parseInt(stadiumData.pricePerHour.replace(/[^0-9]/g, '')) * duration;
            const totalPrice = pricePerCourt * selectedCourts.length;
            const courtIds = selectedCourts.map(court => court.id).join(',');

            const form = document.getElementById('bookingForm');
            form.Date.value = selectedDate;
            form.StartTime.value = startTime;
            form.EndTime.value = endTime;
            form.TotalPrice.value = totalPrice;
            form.CourtId.value = courtIds; // Gửi nhiều ID sân
            form.StadiumId.value = stadiumData.id;

            form.submit();
        }

        console.log("stadium id: ", stadiumData.id);

        // --- Logic cho Slider mới ---
        let slideIndex = 0;
        let slideTimer;

        function showSlides() {
            let i;
            const slides = document.getElementsByClassName("slider-image");
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            slideIndex++;
            if (slideIndex > slides.length) { slideIndex = 1; }
            slides[slideIndex - 1].style.display = "block";
            clearTimeout(slideTimer);
            slideTimer = setTimeout(showSlides, 4000);
        }

        function plusSlides(n) {
            slideIndex += n - 1;
            showSlides();
        }

        function setupCourtTypeSelection() {
            const allOption = document.createElement('option');
            allOption.value = '';
            allOption.textContent = 'Tất cả các sân';
            courtTypeSelectEl.appendChild(allOption);

            courtTypes.forEach(type => {
                const option = document.createElement('option');
                option.value = type;
                option.textContent = type;
                courtTypeSelectEl.appendChild(option);
            });

            courtTypeSelectEl.addEventListener('change', (e) => {
                selectedCourtType = e.target.value;
                selectedCourts = [];
                startTime = null;
                endTime = null;
                updateUI();
            });
        }

        function setupDatePicker() {
            datePickerEl.value = selectedDate;
            datePickerEl.min = selectedDate;

            datePickerEl.addEventListener('change', (e) => {
                selectedDate = e.target.value;
                startTime = null;
                endTime = null;
                selectedCourts = [];
                updateUI();
            });
        }

        // Khởi tạo ứng dụng
        window.onload = function() {
            renderStadiumInfo();
            setupCourtTypeSelection();
            setupDatePicker();
            updateUI();

            continueButtonEl.onclick = showCheckoutPage;

            document.getElementById('modal-close-btn').onclick = hideModal;

            feedbackFormEl.addEventListener('submit', (e) => {
                e.preventDefault();
                const feedbackText = document.getElementById('feedback-textarea').value;
                if (feedbackText.trim() !== '') {
                    showModal('Gửi phản hồi thành công', 'Cảm ơn bạn đã gửi phản hồi. Chúng tôi sẽ ghi nhận và cải thiện!');
                    document.getElementById('feedback-textarea').value = '';
                } else {
                    showModal('Lỗi', 'Vui lòng nhập nội dung phản hồi.');
                }
            });

            showSlides();
        };
    </script>
</body>
</html>
