@{
    ViewData["Title"] = "Quản lý đặt sân";
    var stadiumNames = ViewBag.StadiumNames as Dictionary<int, string>;
    var discountInfo = ViewBag.DiscountInfo as Dictionary<int, string>;
}

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Dashboard Booking System</title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
@section Styles {
    <link rel="stylesheet" href="~/css/Booking/BookingManager.css" />
}

<body>
    <div class="container">
        <!-- Stats Cards -->
        <div class="stats-grid">
            <div class="stat-card blue">
                <div class="stat-header">Tổng booking hôm nay</div>
                <div class="stat-value" id="totalBookings">24</div>
                <div class="stat-change positive">
                    <i class="fas fa-arrow-up"></i>
                    +12% so với hôm qua
                </div>
            </div>
            <div class="stat-card yellow">
                <div class="stat-header">Đang chờ xác nhận</div>
                <div class="stat-value" id="pendingBookings">8</div>
                <div class="stat-change">
                    Cần xử lý
                </div>
            </div>
            <div class="stat-card green">
                <div class="stat-header">Đã xác nhận</div>
                <div class="stat-value" id="confirmedBookings">14</div>
                <div class="stat-change positive">
                    <i class="fas fa-arrow-up"></i>
                    Sẵn sàng
                </div>
            </div>
            <div class="stat-card teal">
                <div class="stat-header">Sân đang hoạt động</div>
                <div class="stat-value">3/4</div>
                <div class="stat-change positive">
                    75% tổng số sân
                </div>
            </div>
        </div>

        <!-- Booking Table -->
        <div class="booking-section">
            <div class="section-header">
                <div class="date-nav">
                    <i class="fas fa-chevron-left date-arrow" id="prevDate"></i>
                    <div class="date-display" id="currentDate">20 Tháng 8, 2025</div>
                    <i class="fas fa-chevron-right date-arrow" id="nextDate"></i>
                </div>
                <div class="search-controls">
                    <div class="filter-btn">Tất cả trạng thái</div>
                    <div class="filter-btn">Tất cả sân</div>
                </div>
            </div>
            <table class="booking-table">
                <thead>
                    <tr>
                        <th>Thời gian</th>
                        <th>Khách hàng</th>
                        <th>Sân</th>
                        <th>Thời lượng</th>
                        <th>Giá tiền</th>
                        <th>Trạng thái</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody id="bookingTableBody">
                    <!-- Booking rows will be inserted here -->
                </tbody>
            </table>
            <div class="pagination">
                <div class="pagination-info">Hiển thị <span id="displayedCount">5</span> trong tổng số <span id="totalBookingCount">24</span> booking đang chờ</div>
                <div class="pagination-controls">
                    <div class="page-btn" id="loadMoreBtn">Tải thêm</div>
                </div>
            </div>
        </div>

        <!-- VIP Customers & Booking Chart (in a new grid) -->
        <div class="main-content-grid">
            <!-- VIP Customers -->
            <div class="vip-customers">
                <div class="chart-header">
                    <h3 class="chart-title">Khách hàng thân thiết</h3>
                </div>
                <div class="vip-customer">
                    <div class="vip-rank">1</div>
                    <div class="vip-info">
                        <div class="vip-name">Trần Hoàng Nam</div>
                        <div class="vip-bookings">48 lượt đặt sân</div>
                    </div>
                </div>
                <div class="vip-customer">
                    <div class="vip-rank">2</div>
                    <div class="vip-info">
                        <div class="vip-name">Lê Minh Quang</div>
                        <div class="vip-bookings">36 lượt đặt sân</div>
                    </div>
                </div>
                <div class="vip-customer">
                    <div class="vip-rank">3</div>
                    <div class="vip-info">
                        <div class="vip-name">Phạm Hữu Đức</div>
                        <div class="vip-bookings">30 lượt đặt sân</div>
                    </div>
                </div>
            </div>

            <!-- Booking Chart -->
            <div class="chart-container">
                <div class="chart-header">
                    <h3 class="chart-title">Thống kê booking theo ngày</h3>
                    <div class="chart-period">Theo tuần</div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="bookingChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Court Chart & Time Chart (in a new grid) -->
        <div class="dashboard-grid">
            <!-- Court Distribution Chart -->
            <div class="chart-container">
                <div class="chart-header">
                    <h3 class="chart-title">Phân bố booking theo sân</h3>
                    <div class="chart-period">Theo tuần</div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="courtChart"></canvas>
                </div>
            </div>

            <!-- Booking Volume by Time Slot Chart -->
            <div class="chart-container">
                <div class="chart-header">
                    <h3 class="chart-title">Số lượng đặt sân theo khung giờ</h3>
                    <div class="chart-period">Theo tuần</div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="timeChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
        var stadiumNames = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(stadiumNames));
        var discountInfo = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(discountInfo));

        console.log("stadiumNames:", stadiumNames);
        console.log("discountInfo:", discountInfo);

        // All booking data (mô phỏng database)
        let allBookings = [
                {
                    id: 1,
                    time: "08:00 - 10:00",
                    date: "20/08/2025",
                    customer: { name: "Trần Hoàng Nam", phone: "0912 345 678", initials: "TN", color: "#3b82f6" },
                    court: "Sân A",
                    duration: "2 giờ",
                    price: "400,000đ",
                    status: "pending"
                },
                {
                    id: 2,
                    time: "10:30 - 12:30",
                    date: "20/08/2025",
                    customer: { name: "Lê Minh Quang", phone: "0987 654 321", initials: "LQ", color: "#10b981" },
                    court: "Sân B",
                    duration: "2 giờ",
                    price: "400,000đ",
                    status: "pending"
                },
                {
                    id: 3,
                    time: "14:00 - 16:00",
                    date: "20/08/2025",
                    customer: { name: "Phạm Hữu Đức", phone: "0901 234 567", initials: "PD", color: "#8b5cf6" },
                    court: "Sân C",
                    duration: "2 giờ",
                    price: "400,000đ",
                    status: "pending"
                },
                {
                    id: 4,
                    time: "16:30 - 18:30",
                    date: "20/08/2025",
                    customer: { name: "Vũ Thanh Tùng", phone: "0976 543 210", initials: "VT", color: "#f59e0b" },
                    court: "Sân A",
                    duration: "2 giờ",
                    price: "400,000đ",
                    status: "pending"
                },
                {
                    id: 5,
                    time: "19:00 - 21:00",
                    date: "20/08/2025",
                    customer: { name: "Đỗ Hải Long", phone: "0965 432 109", initials: "DH", color: "#ef4444" },
                    court: "Sân D",
                    duration: "2 giờ",
                    price: "500,000đ",
                    status: "pending"
                },
                {
                    id: 6,
                    time: "21:00 - 23:00",
                    date: "20/08/2025",
                    customer: { name: "Nguyễn Văn An", phone: "0912 111 222", initials: "NA", color: "#06b6d4" },
                    court: "Sân B",
                    duration: "2 giờ",
                    price: "500,000đ",
                    status: "pending"
                },
                {
                    id: 7,
                    time: "06:00 - 08:00",
                    date: "20/08/2025",
                    customer: { name: "Lê Thị Hoa", phone: "0988 333 444", initials: "LH", color: "#84cc16" },
                    court: "Sân C",
                    duration: "2 giờ",
                    price: "350,000đ",
                    status: "pending"
                },
                {
                    id: 8,
                    time: "12:00 - 14:00",
                    date: "20/08/2025",
                    customer: { name: "Trần Văn Bình", phone: "0977 555 666", initials: "TB", color: "#8b5cf6" },
                    court: "Sân A",
                    duration: "2 giờ",
                    price: "400,000đ",
                    status: "pending"
                },
                {
                    id: 9,
                    time: "15:00 - 17:00",
                    date: "20/08/2025",
                    customer: { name: "Phạm Thị Lan", phone: "0966 777 888", initials: "PL", color: "#f59e0b" },
                    court: "Sân D",
                    duration: "2 giờ",
                    price: "450,000đ",
                    status: "pending"
                },
                {
                    id: 10,
                    time: "17:30 - 19:30",
                    date: "20/08/2025",
                    customer: { name: "Nguyễn Thành Đạt", phone: "0955 999 000", initials: "ND", color: "#10b981" },
                    court: "Sân C",
                    duration: "2 giờ",
                    price: "480,000đ",
                    status: "pending"
                }
            ];

        // Currently displayed bookings (max 5)
        let displayedBookings = [];
        const MAX_DISPLAY = 5;

        // Status mapping
        const statusMap = {
            pending: { text: "Đang chờ", class: "status-pending" },
            confirmed: { text: "Đã xác nhận", class: "status-confirmed" },
            completed: { text: "Đã thanh toán", class: "status-completed" },
            cancelled: { text: "Đã hủy", class: "status-cancelled" }
        };

        $(document).ready(function() {
            updateUI();
        });

        async function updateUI() {
            await fetchStadiumData(1); // Chờ lấy dữ liệu sân xong
        }

        async function fetchStadiumData(id) {
            const searchTerm = `&$filter=Id eq ${id}`;
            try {
                const data = await $.ajax({
                    url: `/Home/Stadiums`,
                    type: 'GET',
                    data: { searchTerm: searchTerm }
                });

                if (data.value && data.value.length > 0) {
                    stadiumData = data.value[0];
                    console.log('Dữ liệu sân vận động:', stadiumData);

                    openTime = parseHour(stadiumData.OpenTime);
                    closeTime = parseHour(stadiumData.CloseTime);

                    console.log('Giờ mở cửa:', openTime);
                    console.log('Giờ đóng cửa:', closeTime);

                    createScheduleTable(openTime, closeTime, stadiumData.Courts);

                } else {
                    console.error('Không tìm thấy dữ liệu sân vận động.');
                }
            } catch (error) {
                console.error('Lỗi khi tải dữ liệu sân vận động:', error);
            }
        }

        // Load next batch of bookings
        function loadNextBookings() {
                const pendingBookings = allBookings.filter(b => b.status === 'pending');
                const currentIds = displayedBookings.map(b => b.id);
                const availableBookings = pendingBookings.filter(b => !currentIds.includes(b.id));

                const needed = MAX_DISPLAY - displayedBookings.length;
                const toAdd = availableBookings.slice(0, needed);

                displayedBookings.push(...toAdd);
                return toAdd;
            }

        // Update stats
        function updateStats() {
                const totalPending = allBookings.filter(b => b.status === 'pending').length;
                const totalConfirmed = allBookings.filter(b => b.status === 'confirmed').length;
                const totalToday = allBookings.length;

                $('#totalBookings').text(totalToday);
                $('#pendingBookings').text(totalPending);
                $('#confirmedBookings').text(totalConfirmed);
                $('#totalBookingCount').text(totalPending);
                $('#displayedCount').text(displayedBookings.length);

                // Update load more button
                const remainingPending = allBookings.filter(b =>
                    b.status === 'pending' &&
                    !displayedBookings.some(d => d.id === b.id)
                ).length;

                if (remainingPending > 0) {
                    $('#loadMoreBtn').show().text(`Tải thêm (${remainingPending} còn lại)`);
                } else {
                    $('#loadMoreBtn').hide();
                }
            }

        // Render booking table
        function renderBookings() {
                const tbody = $('#bookingTableBody');
                tbody.empty();

                displayedBookings.forEach(booking => {
                    const statusInfo = statusMap[booking.status];
                    const row = $(`
                        <tr data-booking-id="${booking.id}">
                            <td>
                                <div class="time-slot">
                                    <div class="time-range">${booking.time}</div>
                                    <div class="date-info">${booking.date}</div>
                                </div>
                            </td>
                            <td>
                                <div class="customer-info">
                                    <div class="customer-details">
                                        <div class="customer-name">${booking.customer.name}</div>
                                        <div class="customer-phone">${booking.customer.phone}</div>
                                    </div>
                                </div>
                            </td>
                            <td>${booking.court}</td>
                            <td>${booking.duration}</td>
                            <td class="price">${booking.price}</td>
                            <td>
                                <span class="status-badge ${statusInfo.class}">
                                    ${statusInfo.text}
                                </span>
                            </td>
                            <td>
                                <div class="actions">
                                    <button class="action-btn view-detail" title="Xem chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="action-btn accept" title="Chấp nhận booking">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    <button class="action-btn deny" title="Từ chối booking">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    `);
                    tbody.append(row);
                });
            }

        // Add new booking to display with animation
        function addNewBookingWithAnimation(booking) {
                const statusInfo = statusMap[booking.status];
                const row = $(`
                    <tr data-booking-id="${booking.id}" style="opacity: 0; transform: translateY(-20px);">
                        <td>
                            <div class="time-slot">
                                <div class="time-range">${booking.time}</div>
                                <div class="date-info">${booking.date}</div>
                            </div>
                        </td>
                        <td>
                            <div class="customer-info">
                                <div class="customer-details">
                                    <div class="customer-name">${booking.customer.name}</div>
                                    <div class="customer-phone">${booking.customer.phone}</div>
                                </div>
                            </div>
                        </td>
                        <td>${booking.court}</td>
                        <td>${booking.duration}</td>
                        <td class="price">${booking.price}</td>
                        <td>
                            <span class="status-badge ${statusInfo.class}">
                                ${statusInfo.text}
                            </span>
                        </td>
                        <td>
                            <div class="actions">
                                <button class="action-btn view-detail" title="Xem chi tiết">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button class="action-btn accept" title="Chấp nhận booking">
                                    <i class="fas fa-check"></i>
                                </button>
                                <button class="action-btn deny" title="Từ chối booking">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `);

                $('#bookingTableBody').append(row);

                // Animate in
                setTimeout(() => {
                    row.css({
                        'opacity': '1',
                        'transform': 'translateY(0)',
                        'transition': 'all 0.3s ease'
                    });
                }, 50);
            }

        // Remove booking and load next one
        function removeBooking(bookingId, isAccepted = false) {
                const row = $(`tr[data-booking-id="${bookingId}"]`);

                // Add removing animation
                row.addClass('removing');

                setTimeout(() => {
                    // Remove from displayed array
                    displayedBookings = displayedBookings.filter(booking => booking.id !== bookingId);

                    // Update status in main array
                    const bookingIndex = allBookings.findIndex(b => b.id === bookingId);
                    if (bookingIndex !== -1) {
                        allBookings[bookingIndex].status = isAccepted ? 'confirmed' : 'cancelled';
                    }

                    // Remove row
                    row.remove();

                    // Load next booking if available
                    const newBookings = loadNextBookings();
                    if (newBookings.length > 0) {
                        newBookings.forEach(booking => {
                            addNewBookingWithAnimation(booking);
                        });
                    }

                    updateStats();

                    // Show success message
                    if (isAccepted) {
                        showMessage('Đã chấp nhận booking thành công!', 'success');
                    } else {
                        showMessage('Đã từ chối booking thành công!', 'warning');
                    }
                }, 300);
            }

        // Show message function
        function showMessage(text, type) {
                $('.message').remove();

                const messageClass = type === 'success' ? 'message-success' : 'message-warning';
                const message = $(`
                    <div class="message ${messageClass}" style="
                        position: fixed;
                        top: 20px;
                        right: 20px;
                        background: ${type === 'success' ? '#d1fae5' : '#fef3c7'};
                        color: ${type === 'success' ? '#065f46' : '#92400e'};
                        padding: 1rem 1.5rem;
                        border-radius: 0.5rem;
                        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                        z-index: 1000;
                        font-weight: 600;
                        border: 1px solid ${type === 'success' ? '#34d399' : '#fbbf24'};
                    ">
                        ${text}
                    </div>
                `);

                $('body').append(message);

                setTimeout(() => {
                    message.fadeOut(() => message.remove());
                }, 3000);
            }

        // Load more button click
        $('#loadMoreBtn').click(function() {
                const newBookings = loadNextBookings();
                if (newBookings.length > 0) {
                    newBookings.forEach(booking => {
                        addNewBookingWithAnimation(booking);
                    });
                    updateStats();
                }
            });

        // Date navigation
        $('#prevDate, #nextDate').click(function() {
                const isNext = $(this).attr('id') === 'nextDate';
                console.log('Navigate to:', isNext ? 'next' : 'previous');
            });

        // Filter functionality
        $('.filter-btn').click(function() {
                console.log('Filter clicked:', $(this).text());
            });

        // Initialize charts
        function initCharts() {
                // Bar Chart - Booking by day
                const bookingCtx = document.getElementById('bookingChart').getContext('2d');
                new Chart(bookingCtx, {
                    type: 'bar',
                    data: {
                        labels: ['T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'CN'],
                        datasets: [{
                            data: [12, 18, 16, 22, 28, 35, 24],
                            backgroundColor: '#60a5fa',
                            borderRadius: 6,
                            borderSkipped: false
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: { display: false },
                                ticks: { display: false }
                            },
                            x: {
                                grid: { display: false }
                            }
                        }
                    }
                });

                // Doughnut Chart - Court distribution
                const courtCtx = document.getElementById('courtChart').getContext('2d');
                new Chart(courtCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Sân A', 'Sân B', 'Sân C', 'Sân D'],
                        datasets: [{
                            data: [35, 28, 22, 15],
                            backgroundColor: ['#60a5fa', '#34d399', '#fbbf24', '#f87171'],
                            borderWidth: 0
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: { usePointStyle: true }
                            }
                        }
                    }
                });

                // Line Chart - Hourly bookings
                const timeCtx = document.getElementById('timeChart').getContext('2d');
                new Chart(timeCtx, {
                    type: 'line',
                    data: {
                        labels: ['6-8h', '8-10h', '10-12h', '14-16h', '16-18h', '18-20h', '20-22h'],
                        datasets: [{
                            data: [5, 12, 8, 15, 18, 20, 16],
                            borderColor: '#60a5fa',
                            backgroundColor: 'rgba(96, 165, 250, 0.1)',
                            fill: true,
                            tension: 0.4,
                            pointBackgroundColor: '#60a5fa',
                            pointBorderColor: '#ffffff',
                            pointBorderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: { color: '#f1f5f9' }
                            },
                            x: {
                                grid: { display: false }
                            }
                        }
                    }
                });
            }

        // Action handlers
        $(document).on('click', '.action-btn.view-detail', function() {
                const bookingId = $(this).closest('tr').data('booking-id');
                const booking = displayedBookings.find(b => b.id === bookingId);
                console.log('Xem chi tiết booking:', booking);
                alert(`Chi tiết booking #${bookingId}\nKhách hàng: ${booking.customer.name}\nThời gian: ${booking.time}\nSân: ${booking.court}`);
            });

        $(document).on('click', '.action-btn.accept', function() {
                const bookingId = $(this).closest('tr').data('booking-id');
                const booking = displayedBookings.find(b => b.id === bookingId);
                console.log('Chấp nhận booking:', booking);

                if (confirm(`Bạn có chắc chắn muốn chấp nhận booking của ${booking.customer.name}?`)) {
                    removeBooking(bookingId, true);
                }
            });

        $(document).on('click', '.action-btn.deny', function() {
                const bookingId = $(this).closest('tr').data('booking-id');
                const booking = displayedBookings.find(b => b.id === bookingId);
                console.log('Từ chối booking:', booking);

                if (confirm(`Bạn có chắc chắn muốn từ chối booking của ${booking.customer.name}?`)) {
                    removeBooking(bookingId, false);
                }
            });

        // Initialize
        loadNextBookings(); // Load first 5 bookings
        renderBookings();
        updateStats();
        setTimeout(initCharts, 100);
    </script>
</body>
