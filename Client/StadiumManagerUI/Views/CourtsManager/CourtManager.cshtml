@{
    ViewData["Title"] = "Quản Lý Sân";
    int stadiumId = ViewBag.StadiumId;
    string currentUser = "tiendatln"; // You can get this from your auth system
    DateTime time = DateTime.UtcNow;
    TimeZoneInfo vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");
    DateTime currentUtc = TimeZoneInfo.ConvertTimeFromUtc(time, vnTimeZone);

}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Fonts and Icons -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" rel="stylesheet">
    <link href="~/css/stadium/courts.css" rel="stylesheet" />
    <!-- Libraries -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Your existing styles remain the same -->
    <style>
        /* Your existing CSS styles here */
    </style>
</head>
<body>
    <div class="container py-5">
        <div class="card p-4">
            <!-- Add user info and datetime -->
            <div class="mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="user-info">
                        <span class="text-muted">
                            <i class="ri-user-line me-1"></i>@currentUser
                        </span>
                        <span class="mx-2">|</span>
                        <span class="text-muted">
                            <i class="ri-time-line me-1"></i>@currentUtc.ToString("yyyy-MM-dd HH:mm:ss UTC")
                        </span>
                    </div>
                    <div class="stadium-info">
                        <span class="badge bg-primary">
                            <i class="ri-building-line me-1"></i>Sân vận động #@stadiumId
                        </span>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Danh Sách Sân</h2>
                <button class="btn btn-primary" onclick="addCourt()">
                    <i class="ri-add-line me-2"></i>Thêm Sân Mới
                </button>
            </div>

            <div class="table-responsive">
                <table class="table table-hover" id="courtsTable">
                    <thead>
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Tên Sân</th>
                            <th scope="col">Loại Thể Thao</th>
                            <th scope="col">Giá/Giờ</th>
                            <th scope="col">Trạng Thái</th>
                            <th scope="col">Ngày Tạo</th>
                            <th scope="col">Ngày Cập Nhật</th>
                            <th scope="col">Hành Động</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data will be loaded dynamically -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        const stadiumId = @stadiumId;
        const currentUser = '@currentUser';
        const currentDateTime = '@currentUtc.ToString("yyyy-MM-dd HH:mm:ss")';
        let selectedSportType = '';
        let selectedStatus = true;

        $(document).ready(function () {
            // Initial load
            loadCourts(stadiumId);

            // Load Courts Function
            function loadCourts(stadiumId) {
                $.ajax({
                    url: '/CourtsManager/GetAllCourts',
                    type: 'GET',
                    dataType: 'json',
                    data: { stadiumId: stadiumId },
                    success: function (data) {
                        let rows = '';
                        data.forEach(court => {
                            let formattedPrice = Number(court.pricePerHour).toLocaleString('vi-VN') + ' VND';
                            let statusBadge = court.isAvailable
                                ? '<span class="badge badge-available">Có Sẵn</span>'
                                : '<span class="badge badge-unavailable">Không Có Sẵn</span>';

                            let actionButtons = `
                                <button class="btn btn-sm btn-outline-primary me-2" onclick="editCourt(${court.id})">
                                    <i class="ri-edit-line"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger me-2" onclick="deleteCourt(${court.id})">
                                    <i class="ri-delete-bin-line"></i>
                                </button>`;

                            if (court.sportType === 'Bóng đá') {
                                actionButtons += `
                                    <button class="btn btn-sm btn-outline-info" onclick="editCourtRelation(${court.id})">
                                        <i class="ri-links-line"></i>
                                    </button>`;
                            }

                            rows += `
                                <tr>
                                    <td>${court.id}</td>
                                    <td>${court.name}</td>
                                    <td>${court.sportType}</td>
                                    <td>${formattedPrice}</td>
                                    <td>${statusBadge}</td>
                                    <td>${new Date(court.createdAt).toLocaleString('vi-VN')}</td>
                                    <td>${new Date(court.updatedAt).toLocaleString('vi-VN')}</td>
                                    <td>${actionButtons}</td>
                                </tr>`;
                        });
                        $('#courtsTable tbody').html(rows);
                    },
                    error: function (xhr, status, error) {
                        console.error('Lỗi khi tải danh sách sân:', error);
                        $('#courtsTable tbody').html(`
                            <tr>
                                <td colspan="8" class="text-center text-danger">
                                    <i class="ri-error-warning-line me-2"></i>
                                    Lỗi khi tải danh sách sân. Vui lòng thử lại.
                                </td>
                            </tr>`);
                    }
                });
            }

            // Add Court Function
            window.addCourt = function() {
                selectedSportType = '';

                Swal.fire({
                    title: '<i class="ri-add-circle-line"></i> Thêm Sân Mới',
                    html: getCourtFormHtml(),
                    showCancelButton: true,
                    confirmButtonText: '<i class="ri-check-line me-1"></i>Thêm Sân',
                    cancelButtonText: '<i class="ri-close-line me-1"></i>Hủy',
                    confirmButtonColor: '#3b82f6',
                    cancelButtonColor: '#6b7280',
                    focusConfirm: false,
                    width: '500px',
                    allowOutsideClick: true,
                    allowEscapeKey: true,
                    showCloseButton: true,
                    didOpen: () => {
                        initializeSportTypeGrid();
                        initializeStatusToggle();
                        selectedStatus = true;
                    },
                    preConfirm: validateCourtForm
                }).then((result) => {
                    if (result.isConfirmed) {
                        const courtData = result.value;
                        courtData.createdAt = currentDateTime;
                        courtData.updatedAt = currentDateTime;
                        courtData.createdBy = currentUser;
                        const formData = new FormData();
                        // add value to form data
                        formData.append("StadiumId", courtData.stadiumId);
                        formData.append("Name", courtData.name);
                        formData.append("SportType", courtData.sportType);
                        formData.append("PricePerHour", courtData.pricePerHour);
                        formData.append("IsAvailable", courtData.isAvailable);
                        formData.append("CreatedAt", courtData.createdAt);
                        formData.append("UpdatedAt", courtData.updatedAt);
                        formData.append("CreatedBy", courtData.createdBy);
                       

                        $.ajax({
                            url: '/CourtsManager/CreateCourt',
                            type: 'POST',
                            processData: false,
                            contentType: false,
                            data: formData,
                            success: function(response) {
                                showSuccessMessage('Thêm Sân Thành Công', 'Sân đã được thêm thành công');
                                loadCourts(stadiumId);
                            },
                            error: function(xhr, status, error) {
                                showErrorMessage('Không thể thêm sân. Vui lòng thử lại.');
                            }
                        });
                    }
                });
            };

            // Edit Court Function
            window.editCourt = function(courtId) {
                $.ajax({
                    url: '/CourtsManager/GetCourtById',
                    type: 'GET',
                    data: { id: courtId },
                    success: function(court) {
                        selectedSportType = court.sportType;
                        selectedStatus = court.isAvailable;

                        Swal.fire({
                            title: '<i class="ri-edit-2-line"></i> Chỉnh Sửa Sân',
                            html: getCourtFormHtml(court),
                            showCancelButton: true,
                            confirmButtonText: '<i class="ri-save-line me-1"></i>Lưu Thay Đổi',
                            cancelButtonText: '<i class="ri-close-line me-1"></i>Hủy',
                            confirmButtonColor: '#3b82f6',
                            cancelButtonColor: '#6b7280',
                            focusConfirm: false,
                            width: '500px',
                            allowOutsideClick: true,
                            allowEscapeKey: true,
                            showCloseButton: true,
                            didOpen: () => {
                                initializeSportTypeGrid();
                                initializeStatusToggle();
                                updatePriceDisplay(court.pricePerHour);
                            },
                            preConfirm: () => validateCourtForm(courtId)
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const courtData = result.value;
                                courtData.updatedAt = currentDateTime;
                                courtData.updatedBy = currentUser;
                                const formData = new FormData();
                        // add value to form data
                        formData.append("Id", courtData.id);
                        formData.append("StadiumId", courtData.stadiumId);
                        formData.append("Name", courtData.name);
                        formData.append("SportType", courtData.sportType);
                        formData.append("PricePerHour", courtData.pricePerHour);
                        formData.append("IsAvailable", courtData.isAvailable);
                        formData.append("CreatedAt", courtData.createdAt);
                        formData.append("UpdatedAt", courtData.updatedAt);
                        formData.append("CreatedBy", courtData.createdBy);

                                $.ajax({
                                    url: '/CourtsManager/UpdateCourt',
                                    type: 'PUT',
                                    processData: false,
                                    contentType: false,
                                    data: formData,
                                    success: function(response) {
                                        showSuccessMessage('Cập Nhật Thành Công', 'Sân đã được cập nhật thành công');
                                        loadCourts(stadiumId);
                                    },
                                    error: function(xhr, status, error) {
                                        showErrorMessage('Không thể cập nhật sân. Vui lòng thử lại.');
                                    }
                                });
                            }
                        });
                    },
                    error: function(xhr, status, error) {
                        showErrorMessage('Không thể lấy thông tin sân. Vui lòng thử lại.');
                    }
                });
            };

            // Delete Court Function
            window.deleteCourt = function(courtId) {
                Swal.fire({
                    title: '<i class="ri-error-warning-line"></i> Bạn có chắc chắn?',
                    html: `
                        <div style="text-align: center; padding: 20px;">
                            <div style="font-size: 4rem; color: #ef4444; margin-bottom: 16px;">
                                <i class="ri-delete-bin-2-line"></i>
                            </div>
                            <p style="font-size: 1.1rem; color: #374151; margin-bottom: 8px;">
                                Hành động này không thể hoàn tác!
                            </p>
                            <p style="color: #6b7280;">
                                Sân sẽ bị xóa vĩnh viễn khỏi hệ thống.
                            </p>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonColor: '#ef4444',
                    cancelButtonColor: '#6b7280',
                    confirmButtonText: '<i class="ri-delete-bin-line me-1"></i>Có, xóa sân!',
                    cancelButtonText: '<i class="ri-close-line me-1"></i>Hủy',
                    width: '400px',
                    allowOutsideClick: true,
                    allowEscapeKey: true,
                    showCloseButton: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/CourtsManager/DeleteCourt',
                            type: 'DELETE',
                            data: {
                                id: courtId
                            },
                            success: function(response) {
                                showSuccessMessage('Đã Xóa!', 'Sân đã được xóa thành công');
                                loadCourts(stadiumId);
                            },
                            error: function(xhr, status, error) {
                                showErrorMessage('Không thể xóa sân. Vui lòng thử lại.');
                            }
                        });
                    }
                });
            };
                    // Edit Court Relation Function
                window.editCourtRelation = function(courtId) {
            $.ajax({
                url: '/CourtsManager/GetAllCourtRelationsByParentId',
                type: 'GET',
                data: { parentId: courtId },
                success: function(courtRelation) {
                    let relations = (courtRelation && courtRelation.length > 0) ? courtRelation : [];

                    // Lấy tất cả sân để fill vào
                    $.ajax({
                        url: '/CourtsManager/GetAllCourts',
                        type: 'GET',
                        data: { stadiumId: stadiumId },
                        success: function(courts) {
                            Swal.fire({
                                title: '<i class="ri-link"></i> ' + (relations.length > 0 ? 'Chỉnh Sửa Quan Hệ Sân' : 'Tạo Quan Hệ Sân'),
                                html: getCourtRelationFormHtml(courtId, relations, courts),
                                showCancelButton: true,
                                confirmButtonText: '<i class="ri-save-line me-1"></i>Lưu',
                                cancelButtonText: '<i class="ri-close-line me-1"></i>Hủy',
                                confirmButtonColor: '#3b82f6',
                                cancelButtonColor: '#6b7280',
                                width: '600px',
                                preConfirm: () => validateCourtRelationForm(courtId)
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    const courtRelationData = result.value;
                                    courtRelationData.updatedAt = currentDateTime;
                                    courtRelationData.updatedBy = currentUser;

                                    const method = relations.length > 0 ? 'PUT' : 'POST';
                                    const url = relations.length > 0
                                        ? '/CourtsManager/UpdateCourtRelation'
                                        : '/CourtsManager/CreateCourtRelation';

                                    $.ajax({
                                        url: url,
                                        type: method,
                                        contentType: 'application/json',
                                        data: JSON.stringify(courtRelationData),
                                        success: function() {
                                            showSuccessMessage(
                                                relations.length > 0 ? 'Cập Nhật Thành Công' : 'Tạo Thành Công',
                                                relations.length > 0 ? 'Quan hệ sân đã được cập nhật' : 'Quan hệ sân mới đã được tạo'
                                            );
                                            loadCourtRelations(stadiumId);
                                        },
                                        error: function() {
                                            showErrorMessage('Không thể lưu quan hệ sân. Vui lòng thử lại.');
                                        }
                                    });
                                }
                            });
                        },
                        error: function() {
                            showErrorMessage('Không thể tải danh sách sân. Vui lòng thử lại.');
                        }
                    });
                },
                error: function() {
                    showErrorMessage('Không thể lấy thông tin quan hệ sân. Vui lòng thử lại.');
                }
            });
        };

        function getCourtRelationFormHtml(parentCourtId, relations, courts) {
            // Lấy danh sách id con hiện tại (nếu có)
            const selectedChildIds = relations.map(r => r.childCourtId);

            // Build danh sách checkbox cho child courts
            const childCheckboxes = courts
                .filter(c => c.id !== parentCourtId) // loại bỏ chính sân cha
                .map(c => {
                    const checked = selectedChildIds.includes(c.id) ? 'checked' : '';
                    return `
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="${c.id}" id="childCourt_${c.id}" ${checked}>
                            <label class="form-check-label" for="childCourt_${c.id}">
                                ${c.name}
                            </label>
                        </div>
                    `;
                }).join('');

            // Tìm tên sân cha
            const parentCourt = courts.find(c => c.id === parentCourtId);

            return `
                <div class="text-left">
                    <div class="mb-3">
                        <label class="form-label">Sân Cha</label>
                        <input type="text" class="form-control" value="${parentCourt ? parentCourt.name : ''}" disabled />
                        <input type="hidden" id="parentCourtId" value="${parentCourtId}" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Sân Con <span class="text-danger">*</span></label>
                        <div class="border rounded p-2" style="max-height:200px;overflow:auto;">
                            ${childCheckboxes}
                        </div>
                    </div>
                </div>
            `;
        }

        function validateCourtRelationForm(courtRelationId) {
            const parentCourtId = parseInt($('#parentCourtId').val());
            const childCourtIds = [];
            $('#relationDescription').val().trim();

            // Collect checked child courts
            $('input[id^="childCourt_"]:checked').each(function() {
                childCourtIds.push(parseInt($(this).val()));
            });

            const description = $('#relationDescription').val().trim();

            if (childCourtIds.length === 0) {
                Swal.showValidationMessage('Vui lòng chọn ít nhất một sân con');
                return false;
            }

            return {
                id: courtRelationId,
                parentCourtId,
                childCourtIds: childCourtIds,
                description
            };
        }


            // Helper Functions (your existing helper functions remain the same)
            function getCourtFormHtml(court = null) {
                return `
                    <div class="custom-form-container">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="ri-text me-1"></i>Tên Sân
                            </label>
                            <div class="input-group">
                                <i class="ri-football-line input-icon"></i>
                                <input id="courtName" class="form-control-custom with-icon"
                                       placeholder="Nhập tên sân" maxlength="255"
                                       value="${court ? court.name : ''}">
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="ri-basketball-line me-1"></i>Loại Thể Thao
                            </label>
                            <div class="sport-type-grid" id="sportTypeGrid">
                                <div class="sport-option ${court && court.sportType === 'Bóng đá' ? 'selected' : ''}"
                                     data-value="Bóng đá">
                                    <i class="ri-football-line"></i>
                                    <div>Bóng đá</div>
                                </div>
                                <div class="sport-option ${court && court.sportType === 'Bóng rổ' ? 'selected' : ''}"
                                     data-value="Bóng rổ">
                                    <i class="ri-basketball-line"></i>
                                    <div>Bóng rổ</div>
                                </div>
                                <div class="sport-option ${court && court.sportType === 'Tennis' ? 'selected' : ''}"
                                     data-value="Tennis">
                                    <i class="ri-ping-pong-line"></i>
                                    <div>Tennis</div>
                                </div>
                                <div class="sport-option ${court && court.sportType === 'Cầu lông' ? 'selected' : ''}"
                                     data-value="Cầu lông">
                                    <i class="ri-trophy-line"></i>
                                    <div>Cầu lông</div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="ri-money-dollar-circle-line me-1"></i>Giá mỗi Giờ (VND)
                            </label>
                            <div class="input-group">
                                <i class="ri-money-dollar-circle-line input-icon"></i>
                                <input id="pricePerHour" class="form-control-custom with-icon"
                                       type="number" step="1000" placeholder="Nhập giá mỗi giờ"
                                       value="${court ? court.pricePerHour : ''}"
                                       oninput="updatePriceDisplay(this.value)">
                            </div>
                            <div class="price-display" id="priceDisplay"></div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="ri-toggle-line me-1"></i>Trạng Thái
                            </label>
                            <div class="status-toggle" id="statusToggle">
                                <button type="button" class="status-option ${court && court.isAvailable ? 'active' : ''}"
                                        data-value="true">
                                    <i class="ri-check-line me-1"></i>Có Sẵn
                                </button>
                                <button type="button" class="status-option ${court && !court.isAvailable ? 'inactive' : ''}"
                                        data-value="false">
                                    <i class="ri-close-line me-1"></i>Không Có Sẵn
                                </button>
                            </div>
                        </div>

                        <!-- Add metadata display if editing -->
                        ${court ? `
                        <div class="metadata mt-4 pt-3 border-top">
                            <div class="text-muted small">
                                <div><i class="ri-user-line me-1"></i>Tạo bởi: ${court.createdBy || currentUser}</div>
                                <div><i class="ri-time-line me-1"></i>Ngày tạo: ${new Date(court.createdAt || currentDateTime).toLocaleString('vi-VN')}</div>
                                ${court.updatedBy ? `
                                <div><i class="ri-user-line me-1"></i>Cập nhật bởi: ${court.updatedBy}</div>
                                <div><i class="ri-time-line me-1"></i>Ngày cập nhật: ${new Date(court.updatedAt).toLocaleString('vi-VN')}</div>
                                ` : ''}
                            </div>
                        </div>
                        ` : ''}
                    </div>
                `;
            }

            // Your other helper functions remain the same
            function validateCourtForm(courtId = null) {
                const courtName = document.getElementById('courtName').value;
                const pricePerHour = document.getElementById('pricePerHour').value;

                if (!courtName || courtName.length > 255) {
                    Swal.showValidationMessage('Tên sân bắt buộc và tối đa 255 ký tự.');
                    return false;
                }
                if (!selectedSportType) {
                    Swal.showValidationMessage('Vui lòng chọn loại thể thao.');
                    return false;
                }
                if (!pricePerHour || pricePerHour <= 0) {
                    Swal.showValidationMessage('Giá mỗi giờ phải là số dương.');
                    return false;
                }

                const data = {
                    stadiumId: stadiumId,
                    name: courtName,
                    sportType: selectedSportType,
                    pricePerHour: parseFloat(pricePerHour),
                    isAvailable: selectedStatus
                };

                if (courtId) {
                    data.id = courtId;
                }

                return data;
            }

            function initializeSportTypeGrid() {
                document.querySelectorAll('.sport-option').forEach(option => {
                    option.addEventListener('click', function() {
                        document.querySelectorAll('.sport-option').forEach(opt => opt.classList.remove('selected'));
                        this.classList.add('selected');
                        selectedSportType = this.dataset.value;
                    });
                });
            }

            function initializeStatusToggle() {
                document.querySelectorAll('.status-option').forEach(option => {
                    option.addEventListener('click', function() {
                        document.querySelectorAll('.status-option').forEach(opt => {
                            opt.classList.remove('active', 'inactive');
                        });

                        const isAvailable = this.dataset.value === 'true';
                        if (isAvailable) {
                            this.classList.add('active');
                        } else {
                            this.classList.add('inactive');
                        }
                        selectedStatus = isAvailable;
                    });
                });
            }
    
                window.updatePriceDisplay = function(value) {
            const priceDisplay = document.getElementById('priceDisplay');
            if (priceDisplay && value && !isNaN(value)) {
                const formattedPrice = Number(value).toLocaleString('vi-VN');
                priceDisplay.textContent = `${formattedPrice} VND`;
                priceDisplay.style.color = '#10b981';
            } else if (priceDisplay) {
                priceDisplay.textContent = '';
            }
        };


            function showSuccessMessage(title, text) {
                Swal.fire({
                    icon: 'success',
                    title: `<i class="ri-check-circle-line"></i> ${title}`,
                    text: text,
                    confirmButtonColor: '#10b981',
                    confirmButtonText: 'Hoàn Tất',
                    timer: 2000,
                    timerProgressBar: true,
                    allowOutsideClick: true,
                    allowEscapeKey: true,
                    showCloseButton: true
                });
            }

            function showErrorMessage(text) {
                Swal.fire({
                    icon: 'error',
                    title: '<i class="ri-error-warning-line"></i> Lỗi',
                    text: text,
                    confirmButtonColor: '#ef4444',
                    allowOutsideClick: true,
                    allowEscapeKey: true,
                    showCloseButton: true
                });
            }
        });
    </script>
</body>
</html>

