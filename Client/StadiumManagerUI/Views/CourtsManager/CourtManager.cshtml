@{
    ViewData["Title"] = "Quản Lý Sân";
    int stadiumId = ViewBag.StadiumId;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f9fa;
            color: #2c3e50;
        }

        .container {
            max-width: 1400px;
            padding: 2rem;
        }

        .card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

            .header h1 {
                font-size: 1.8rem;
                font-weight: 600;
                color: #2c3e50;
                margin: 0;
            }

        .btn-add {
            background-color: #2ecc71;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }

            .btn-add:hover {
                background-color: #27ae60;
                transform: translateY(-2px);
            }

        .table {
            width: 100%;
            margin-bottom: 1rem;
            background-color: white;
            border-radius: 10px;
            overflow: hidden;
        }

            .table thead th {
                background-color: #34495e;
                color: white;
                font-weight: 500;
                padding: 1rem;
                border: none;
            }

            .table tbody td {
                padding: 1rem;
                vertical-align: middle;
                border-bottom: 1px solid #eee;
            }

        .badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 500;
        }

        .badge-available {
            background-color: #2ecc71;
            color: white;
        }

        .badge-unavailable {
            background-color: #e74c3c;
            color: white;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .btn-action {
            padding: 0.5rem;
            border-radius: 6px;
            border: none;
            color: white;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .btn-edit {
            background-color: #3498db;
        }

        .btn-delete {
            background-color: #e74c3c;
        }

        .btn-link {
            background-color: #2ecc71;
        }

        .btn-action:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }

        /* Custom Form Styles */
        .custom-form {
            padding: 1rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: #2c3e50;
        }

        .form-control {
            border: 1px solid #dce4ec;
            border-radius: 8px;
            padding: 0.75rem;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                border-color: #3498db;
                box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
            }

        /* SweetAlert2 Custom Styles */
        .swal2-popup {
            border-radius: 15px;
            padding: 2rem;
        }

        .swal2-title {
            font-size: 1.5rem !important;
            font-weight: 600 !important;
            color: #2c3e50 !important;
        }

        .swal2-html-container {
            margin: 1.5rem 0;
        }

        .swal2-styled.swal2-confirm {
            background-color: #2ecc71 !important;
        }

        .swal2-styled.swal2-cancel {
            background-color: #95a5a6 !important;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <div class="header">
                <h1>
                    <i class="ri-layout-grid-line me-2"></i>
                    Danh Sách Sân - SVĐ ID: @stadiumId
                </h1>
                <button class="btn btn-add" onclick="addCourt()">
                    <i class="ri-add-line"></i>
                    Thêm Sân Mới
                </button>
            </div>

            <div class="table-responsive">
                <table class="table" id="courtsTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên Sân</th>
                            <th>Loại Thể Thao</th>
                            <th>Giá/Giờ</th>
                            <th>Trạng Thái</th>
                            <th>Ngày Tạo</th>
                            <th>Ngày Cập Nhật</th>
                            <th>Hành Động</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            loadCourts(@stadiumId);

            function loadCourts(stadiumId) {
                $.ajax({
                    url: '/CourtsManager/GetAllCourts',
                    type: 'GET',
                    data: { stadiumId: stadiumId },
                    success: function (data) {
                        let rows = '';
                        data.forEach(court => {
                            let formattedPrice = new Intl.NumberFormat('vi-VN', {
                                style: 'currency',
                                currency: 'VND'
                            }).format(court.pricePerHour);

                            let statusBadge = court.isAvailable
                                ? '<span class="badge badge-available">Có Sẵn</span>'
                                : '<span class="badge badge-unavailable">Không Có Sẵn</span>';

                            rows += `
                                <tr>
                                    <td>${court.id}</td>
                                    <td>${court.name}</td>
                                    <td>${court.sportType}</td>
                                    <td>${formattedPrice}</td>
                                    <td>${statusBadge}</td>
                                    <td>${new Date(court.createdAt).toLocaleString('vi-VN')}</td>
                                    <td>${new Date(court.updatedAt).toLocaleString('vi-VN')}</td>
                                    <td>
                                        <div class="action-buttons">
                                            <button class="btn-action btn-edit" onclick="editCourt(${court.id})">
                                                <i class="ri-edit-line"></i>
                                            </button>
                                            <button class="btn-action btn-delete" onclick="deleteCourt(${court.id})">
                                                <i class="ri-delete-bin-line"></i>
                                            </button>
                                            ${court.sportType === 'Bóng Đá' ? `
                                                <button class="btn-action btn-link" onclick="editCourtRelation(${court.id})">
                                                    <i class="ri-link"></i>
                                                </button>
                                            ` : ''}
                                        </div>
                                    </td>
                                </tr>`;
                        });
                        $('#courtsTable tbody').html(rows);
                    },
                    error: function (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Không thể tải danh sách sân',
                            confirmButtonColor: '#e74c3c'
                        });
                    }
                });
            }

            window.addCourt = function() {
                Swal.fire({
                    title: '<i class="ri-add-circle-line"></i> Thêm Sân Mới',
                    html: `
                        <form class="custom-form">
                            <div class="form-group">
                                <label class="form-label">Tên Sân</label>
                                <input id="courtName" class="form-control" placeholder="Nhập tên sân" maxlength="255">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Loại Thể Thao</label>
                                <select id="sportType" class="form-control">
                                    <option value="" disabled selected>Chọn loại thể thao</option>
                                    <option value="Bóng Đá">Bóng Đá</option>
                                    <option value="Bóng Rổ">Bóng Rổ</option>
                                    <option value="Quần Vợt">Quần Vợt</option>
                                    <option value="Cầu Lông">Cầu Lông</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Giá mỗi Giờ (VND)</label>
                                <input id="pricePerHour" class="form-control" type="number" step="1000" placeholder="Nhập giá mỗi giờ">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Trạng Thái</label>
                                <select id="isAvailable" class="form-control">
                                    <option value="true">Có Sẵn</option>
                                    <option value="false">Không Có Sẵn</option>
                                </select>
                            </div>
                        </form>
                    `,
                    showCancelButton: true,
                    confirmButtonText: '<i class="ri-save-line"></i> Thêm Sân',
                    cancelButtonText: '<i class="ri-close-line"></i> Hủy',
                    confirmButtonColor: '#2ecc71',
                    cancelButtonColor: '#95a5a6',
                    preConfirm: () => {
                        const courtName = document.getElementById('courtName').value;
                        const sportType = document.getElementById('sportType').value;
                        const pricePerHour = document.getElementById('pricePerHour').value;
                        const isAvailable = document.getElementById('isAvailable').value === 'true';

                        if (!courtName || courtName.length > 255) {
                            Swal.showValidationMessage('Tên sân không hợp lệ');
                            return false;
                        }
                        if (!sportType) {
                            Swal.showValidationMessage('Vui lòng chọn loại thể thao');
                            return false;
                        }
                        if (!pricePerHour || pricePerHour <= 0) {
                            Swal.showValidationMessage('Giá tiền không hợp lệ');
                            return false;
                        }

                        return {
                            stadiumId: @stadiumId,
                            name: courtName,
                            sportType: sportType,
                            pricePerHour: parseFloat(pricePerHour),
                            isAvailable: isAvailable
                        };
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/CourtsManager/CreateCourt',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(result.value),
                            success: function() {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Thành Công',
                                    text: 'Thêm sân mới thành công',
                                    confirmButtonColor: '#2ecc71'
                                }).then(() => loadCourts(@stadiumId));
                            },
                            error: function(error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi',
                                    text: 'Không thể thêm sân mới',
                                    confirmButtonColor: '#e74c3c'
                                });
                            }
                        });
                    }
                });
            }

            window.editCourt = function(courtId) {
                $.ajax({
                    url: '/CourtsManager/GetCourtById',
                    type: 'GET',
                    data: { id: courtId },
                    success: function(court) {
                        Swal.fire({
                            title: '<i class="ri-edit-line"></i> Chỉnh Sửa Sân',
                            html: `
                                <form class="custom-form">
                                    <div class="form-group">
                                        <label class="form-label">Tên Sân</label>
                                        <input id="courtName" class="form-control" value="${court.name}" maxlength="255">
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Loại Thể Thao</label>
                                        <select id="sportType" class="form-control">
                                            <option value="Bóng Đá" ${court.sportType === 'Bóng Đá' ? 'selected' : ''}>Bóng Đá</option>
                                            <option value="Bóng Rổ" ${court.sportType === 'Bóng Rổ' ? 'selected' : ''}>Bóng Rổ</option>
                                            <option value="Quần Vợt" ${court.sportType === 'Quần Vợt' ? 'selected' : ''}>Quần Vợt</option>
                                            <option value="Cầu Lông" ${court.sportType === 'Cầu Lông' ? 'selected' : ''}>Cầu Lông</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Giá mỗi Giờ (VND)</label>
                                        <input id="pricePerHour" class="form-control" type="number" step="1000" value="${court.pricePerHour}">
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Trạng Thái</label>
                                        <select id="isAvailable" class="form-control">
                                            <option value="true" ${court.isAvailable ? 'selected' : ''}>Có Sẵn</option>
                                            <option value="false" ${!court.isAvailable ? 'selected' : ''}>Không Có Sẵn</option>
                                        </select>
                                    </div>
                                </form>
                            `,
                            showCancelButton: true,
                            confirmButtonText: '<i class="ri-save-line"></i> Lưu Thay Đổi',
                            cancelButtonText: '<i class="ri-close-line"></i> Hủy',
                            confirmButtonColor: '#3498db',
                            cancelButtonColor: '#95a5a6',
                            preConfirm: () => {
                                const courtName = document.getElementById('courtName').value;
                                const sportType = document.getElementById('sportType').value;
                                const pricePerHour = document.getElementById('pricePerHour').value;
                                const isAvailable = document.getElementById('isAvailable').value === 'true';

                                if (!courtName || courtName.length > 255) {
                                    Swal.showValidationMessage('Tên sân không hợp lệ');
                                    return false;
                                }
                                if (!sportType) {
                                    Swal.showValidationMessage('Vui lòng chọn loại thể thao');
                                    return false;
                                }
                                if (!pricePerHour || pricePerHour <= 0) {
                                    Swal.showValidationMessage('Giá tiền không hợp lệ');
                                    return false;
                                }

                                return {
                                    id: courtId,
                                    stadiumId: @stadiumId,
                                    name: courtName,
                                    sportType: sportType,
                                    pricePerHour: parseFloat(pricePerHour),
                                    isAvailable: isAvailable
                                };
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                $.ajax({
                                    url: '/CourtsManager/UpdateCourt',
                                    type: 'PUT',
                                    contentType: 'application/json',
                                    data: JSON.stringify(result.value),
                                    success: function() {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Thành Công',
                                            text: 'Cập nhật sân thành công',
                                            confirmButtonColor: '#2ecc71'
                                        }).then(() => loadCourts(@stadiumId));
                                    },
                                    error: function(error) {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Lỗi',
                                            text: 'Không thể cập nhật sân',
                                            confirmButtonColor: '#e74c3c'
                                        });
                                    }
                                });
                            }
                        });
                    }
                });
            }

            window.deleteCourt = function(courtId) {
                Swal.fire({
                    title: '<i class="ri-error-warning-line"></i> Xác Nhận Xóa',
                    html: `
                        <div class="alert alert-warning">
                            <i class="ri-alert-line"></i>
                            Bạn có chắc chắn muốn xóa sân này?<br>
                            Hành động này không thể hoàn tác!
                        </div>
                    `,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: '<i class="ri-delete-bin-line"></i> Xóa Sân',
                    cancelButtonText: '<i class="ri-close-line"></i> Hủy',
                    confirmButtonColor: '#e74c3c',
                    cancelButtonColor: '#95a5a6'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/CourtsManager/DeleteCourt',
                            type: 'DELETE',
                            data: { id: courtId },
                            success: function() {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Thành Công',
                                    text: 'Xóa sân thành công',
                                    confirmButtonColor: '#2ecc71'
                                }).then(() => loadCourts(@stadiumId));
                            },
                            error: function(error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi',
                                    text: 'Không thể xóa sân',
                                    confirmButtonColor: '#e74c3c'
                                });
                            }
                        });
                    }
                });
            }

            window.editCourtRelation = function(courtId) {
                $.ajax({
                    url: '/CourtsManager/GetAllCourts',
                    type: 'GET',
                    data: { stadiumId: @stadiumId },
                    success: function(courts) {
                        let courtOptions = courts
                            .filter(court => court.id !== courtId)
                            .map(court => `<option value="${court.id}">${court.name} (${court.sportType})</option>`)
                            .join('');

                        Swal.fire({
                            title: '<i class="ri-link"></i> Quản Lý Sân Con',
                            html: `
                                <form class="custom-form">
                                    <div class="form-group">
                                        <label class="form-label">Chọn Sân Con (Ctrl + Click để chọn nhiều)</label>
                                        <select id="childCourts" class="form-control" multiple style="height: 150px">
                                            ${courtOptions}
                                        </select>
                                    </div>
                                </form>
                            `,
                            showCancelButton: true,
                            confirmButtonText: '<i class="ri-save-line"></i> Lưu Thay Đổi',
                            cancelButtonText: '<i class="ri-close-line"></i> Hủy',
                            confirmButtonColor: '#2ecc71',
                            cancelButtonColor: '#95a5a6',
                            preConfirm: () => {
                                const selectedCourts = Array.from(document.getElementById('childCourts').selectedOptions)
                                    .map(option => parseInt(option.value));

                                if (selectedCourts.length === 0) {
                                    Swal.showValidationMessage('Vui lòng chọn ít nhất một sân con');
                                    return false;
                                }

                                return selectedCourts;
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const relations = result.value.map(childId => ({
                                    parentCourtId: courtId,
                                    childCourtId: childId
                                }));

                                $.ajax({
                                    url: '/CourtsManager/CreateCourtRelations',
                                    type: 'POST',
                                    contentType: 'application/json',
                                    data: JSON.stringify(relations),
                                    success: function() {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Thành Công',
                                            text: 'Cập nhật quan hệ sân thành công',
                                            confirmButtonColor: '#2ecc71'
                                        });
                                    },
                                    error: function(error) {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Lỗi',
                                            text: 'Không thể cập nhật quan hệ sân',
                                            confirmButtonColor: '#e74c3c'
                                        });
                                    }
                                });
                            }
                        });
                    }
                });
            }
        });
    </script>
</body>
</html>